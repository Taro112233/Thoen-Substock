// prisma/schemas/hospital-core.prisma
// Hospital Core Management Schema
// ระบบจัดการข้อมูลหลักของโรงพยาบาล แผนก และคลังยา

enum HospitalType {
  GENERAL         // โรงพยาบาลทั่วไป
  SPECIALTY       // โรงพยาบาลเฉพาะทาง
  UNIVERSITY      // โรงพยาบาลมหาวิทยาลัย
  PRIVATE         // โรงพยาบาลเอกชน
  COMMUNITY       // โรงพยาบาลชุมชน
  DISTRICT        // โรงพยาบาลระดับอำเภอ
}

enum HospitalStatus {
  ACTIVE      // ใช้งานปกติ
  INACTIVE    // ปิดชั่วคราว
  SUSPENDED   // ระงับการใช้งาน
  PENDING     // รอการอนุมัติ
}

model Hospital {
  id          String        @id @default(uuid())
  
  // ข้อมูลพื้นฐาน
  name        String
  nameEn      String?       // ชื่อภาษาอังกฤษ
  shortName   String?       // ชื่อย่อ
  code        String        @unique // รหัสโรงพยาบาล
  description String?
  
  // ประเภทและสถานะ
  type        HospitalType
  status      HospitalStatus @default(PENDING)
  
  // ข้อมูลใบอนุญาต
  licenseNumber String?     // เลขใบอนุญาต
  licenseExpiry DateTime?   // วันหมดอายุใบอนุญาต
  accreditation String?     // การรับรอง
  
  // ที่อยู่และการติดต่อ
  address     Json          // ที่อยู่ครบถ้วน
  phoneNumber String?
  faxNumber   String?
  email       String?
  website     String?
  
  // การตั้งค่าระบบ
  timezone    String        @default("Asia/Bangkok")
  locale      String        @default("th")
  currency    String        @default("THB")
  
  // การสมัครสมาชิก
  subscription Json?        // ข้อมูลการสมัครสมาชิก
  planType    String?       // ประเภทแผน: "BASIC", "STANDARD", "PREMIUM"
  planStartDate DateTime?
  planEndDate   DateTime?
  maxUsers      Int?        // จำนวนผู้ใช้สูงสุด
  maxDepartments Int?       // จำนวนแผนกสูงสุด
  
  // การเงิน
  billingAddress Json?      // ที่อยู่สำหรับเรียกเก็บเงิน
  taxId         String?     // เลขประจำตัวผู้เสียภาษี
  
  // Audit fields
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  createdBy   String?
  isActive    Boolean       @default(true)
  
  // Relations - เพิ่ม inverse relations ทั้งหมด
  users       User[]
  departments Department[]
  warehouses  Warehouse[]
  drugs       Drug[]
  stockCards  StockCard[]
  suppliers   Supplier[]
  requisitions Requisition[]
  requisitionTemplates RequisitionTemplate[]
  purchaseOrders PurchaseOrder[]
  goodsReceipts GoodsReceipt[]
  auditLogs   AuditLog[]
  notifications Notification[]
  reports     Report[]
  dashboards  Dashboard[]
  kpiMetrics  KPIMetric[]
  systemUsage SystemUsage[]
  mlDataPoints MLDataPoint[]
  forecasts   Forecast[]
  trendAnalyses TrendAnalysis[]
  benchmarks  Benchmark[]
  dataAccessLogs DataAccessLog[]
  complianceChecks ComplianceCheck[]
  controlledSubstanceLogs ControlledSubstanceLog[]
  internalAudits InternalAudit[]
  securityIncidents SecurityIncident[]
  notificationTemplates NotificationTemplate[]
  alertRules  AlertRule[]
  alertLogs   AlertLog[]
  notificationChannels NotificationChannel[]
  
  @@map("hospitals")
}

enum DepartmentType {
  CLINICAL        // แผนกคลินิก - Internal Medicine, Surgery, Pediatrics
  SUPPORT         // แผนกสนับสนุน - Laboratory, Radiology, Pharmacy
  CRITICAL_CARE   // แผนกวิกฤต - ICU, CCU, ER
  OUTPATIENT      // แผนกผู้ป่วยนอก - OPD clinics, Specialty clinics
  ADMINISTRATIVE  // แผนกบริหาร - HR, Finance, IT
}

enum DepartmentStatus {
  ACTIVE      // ใช้งานปกติ
  INACTIVE    // ปิดชั่วคราว
  PLANNED     // อยู่ระหว่างการวางแผน
  CLOSED      // ปิดถาวร
}

model Department {
  id             String          @id @default(uuid())
  
  // ความสัมพันธ์กับโรงพยาบาล
  hospitalId     String
  hospital       Hospital        @relation(fields: [hospitalId], references: [id], onDelete: Cascade)
  
  // ข้อมูลพื้นฐาน
  name           String
  nameEn         String?
  shortName      String?
  code           String          // รหัสแผนก
  description    String?
  
  // ประเภทและสถานะ
  type           DepartmentType
  status         DepartmentStatus @default(ACTIVE)
  
  // การจัดการทางการเงิน
  budgetAllocation Decimal?      // งบประมาณที่ได้รับ
  costCenter     String?         // รหัสศูนย์ต้นทุน
  
  // การติดต่อ
  location       String?         // ตำแหน่งในโรงพยาบาล
  phoneExtension String?         // หมายเลขต่อใน
  
  // การจัดการ
  headUserId     String?         // หัวหน้าแผนก
  headUser       User?           @relation("DepartmentHead", fields: [headUserId], references: [id], onDelete: SetNull)
  
  // การตั้งค่า
  settings       Json?           // การตั้งค่าเฉพาะแผนก
  operatingHours Json?           // เวลาทำการ
  
  // Audit fields
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
  isActive       Boolean         @default(true)
  
  // Relations - เพิ่ม inverse relations
  users          User[]          // Staff ในแผนก
  requisitions   Requisition[]   // ใบเบิกจากแผนก
  requisitionTemplates RequisitionTemplate[]
  
  @@unique([hospitalId, code])
  @@map("departments")
}

enum WarehouseType {
  MAIN_PHARMACY   // เภสัชกรรมหลัก
  SATELLITE       // คลังย่อย
  EMERGENCY       // คลังฉุกเฉิน
  CONTROLLED      // คลังยาควบคุม
  COLD_STORAGE    // ห้องเย็น
  QUARANTINE      // ห้องกักกัน
  EXPIRED         // คลังยาหมดอายุ
}

enum WarehouseStatus {
  ACTIVE      // ใช้งานปกติ
  INACTIVE    // ปิดใช้งานชั่วคราว
  MAINTENANCE // อยู่ระหว่างซ่อมบำรุง
  FULL        // เต็ม ไม่สามารถรับเพิ่มได้
}

model Warehouse {
  id           String          @id @default(uuid())
  
  // ความสัมพันธ์กับโรงพยาบาล
  hospitalId   String
  hospital     Hospital        @relation(fields: [hospitalId], references: [id], onDelete: Cascade)
  
  // ข้อมูลพื้นฐาน
  name         String
  code         String          // รหัสคลัง
  description  String?
  
  // ประเภทและสถานะ
  type         WarehouseType
  status       WarehouseStatus @default(ACTIVE)
  
  // ตำแหน่งและขนาด
  location     String?         // ตำแหน่งภายในโรงพยาบาล
  floor        String?         // ชั้น
  room         String?         // ห้อง
  capacity     Decimal?        // ความจุ (ลูกบาศก์เมตร)
  
  // การควบคุมสิ่งแวดล้อม
  tempMin      Decimal?        // อุณหภูมิต่ำสุด (°C)
  tempMax      Decimal?        // อุณหภูมิสูงสุด (°C)
  humidityMin  Decimal?        // ความชื้นต่ำสุด (%)
  humidityMax  Decimal?        // ความชื้นสูงสุด (%)
  hasTemperatureControl Boolean @default(false)
  hasHumidityControl Boolean @default(false)
  
  // ความปลอดภัย
  securityLevel String?        // ระดับความปลอดภัย
  accessControl Json?          // การควบคุมการเข้าถึง
  requiresApproval Boolean     @default(false)
  
  // การจัดการ
  managerUserId String?        // ผู้จัดการคลัง
  managerUser   User?          @relation("WarehouseManager", fields: [managerUserId], references: [id], onDelete: SetNull)
  
  // การตั้งค่า
  settings      Json?          // การตั้งค่าเฉพาะคลัง
  
  // Audit fields
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  isActive      Boolean        @default(true)
  
  // Relations - เพิ่ม inverse relations ทั้งหมด
  stockCards    StockCard[]
  transactions  StockTransaction[]
  transfersFrom StockTransaction[] @relation("TransferFrom")
  transfersTo   StockTransaction[] @relation("TransferTo")
  stockCounts   StockCount[]
  monitoringLogs TemperatureLog[]
  
  @@unique([hospitalId, code])
  @@map("warehouses")
}

// การติดตามอุณหภูมิและความชื้น
model TemperatureLog {
  id          String    @id @default(uuid())
  
  // ความสัมพันธ์
  warehouseId String
  warehouse   Warehouse @relation(fields: [warehouseId], references: [id], onDelete: Cascade)
  
  // ข้อมูลการวัด
  temperature Decimal   // อุณหภูมิ (°C)
  humidity    Decimal?  // ความชื้น (%)
  
  // สถานะ
  isWithinRange Boolean  // อยู่ในช่วงที่กำหนดหรือไม่
  alertTriggered Boolean @default(false) // มีการแจ้งเตือนหรือไม่
  
  // อุปกรณ์วัด
  deviceId    String?   // รหัสอุปกรณ์วัด
  deviceType  String?   // ประเภทอุปกรณ์
  
  // การติดตาม
  recordedAt  DateTime  @default(now())
  
  @@index([warehouseId, recordedAt])
  @@map("temperature_logs")
}