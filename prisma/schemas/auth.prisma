// prisma/schemas/auth.prisma
// Authentication and User Management Schema (Enhanced with Master Data Relations)
// ระบบจัดการผู้ใช้และการยืนยันตัวตนสำหรับ Hospital Pharmacy System

enum Role {
  DEVELOPER           // นักพัฒนา - สิทธิ์สูงสุด (ใหม่)
  HOSPITAL_ADMIN      // ผู้ดูแลระบบโรงพยาบาล - สิทธิ์เต็ม
  PHARMACY_MANAGER    // ผู้จัดการเภสัชกรรม - จัดการสต็อกและอนุมัติ
  SENIOR_PHARMACIST   // เภสัชกรอาวุโส - จัดการสต็อกและจ่ายยา
  STAFF_PHARMACIST    // เภสัชกรประจำ - จ่ายยาและรับสต็อก
  DEPARTMENT_HEAD     // หัวหน้าแผนก - เบิกยาและจัดการงบประมาณ
  STAFF_NURSE         // พยาบาลประจำ - เบิกยาพื้นฐาน
  PHARMACY_TECHNICIAN // เทคนิคเภสัชกรรม - รับสต็อกและจัดระเบียบ
  DIRECTOR            // ผู้อำนวยการ (ใหม่)
  GROUP_HEAD          // หัวหน้ากลุ่มงาน (ใหม่)  
  STAFF               // พนักงาน (ใหม่)
  STUDENT             // นักศึกษา (ใหม่)
}

enum UserStatus {
  PENDING   // รอการอนุมัติ
  ACTIVE    // ใช้งานได้
  INACTIVE  // ปิดการใช้งานชั่วคราว
  SUSPENDED // ระงับการใช้งาน
  DELETED   // ลบแล้ว (soft delete)
}

model User {
  id            String      @id @default(uuid())
  
  // ข้อมูลพื้นฐาน
  email         String      @unique
  name          String
  username      String      @unique  // เพิ่มสำหรับ login
  firstName     String?     // ชื่อ
  lastName      String?     // นามสกุล
  phoneNumber   String?
  employeeId    String?     // รหัสพนักงาน
  position      String?     // ตำแหน่ง
  
  // การยืนยันตัวตน
  emailVerified Boolean     @default(false)
  password      String?     // hashed password
  
  // Profile completion tracking
  isProfileComplete Boolean @default(false)
  
  // บทบาทและสิทธิ์
  role          Role
  status        UserStatus  @default(PENDING)
  
  // ความสัมพันธ์กับ Personnel Type (Master Data)
  personnelTypeId String?
  personnelType PersonnelType? @relation(fields: [personnelTypeId], references: [id], onDelete: SetNull)
  
  // ความสัมพันธ์กับโรงพยาบาล
  hospitalId    String
  hospital      Hospital    @relation(fields: [hospitalId], references: [id], onDelete: Cascade)
  
  // ความสัมพันธ์กับแผนก (optional สำหรับ pharmacy staff)
  departmentId  String?
  department    Department? @relation(fields: [departmentId], references: [id], onDelete: SetNull)
  
  // การติดตามการเข้าสู่ระบบ
  lastLoginAt   DateTime?
  lastLoginIP   String?
  loginCount    Int         @default(0)
  
  // ================================
  // USER APPROVAL SYSTEM FIELDS
  // ================================
  
  // การอนุมัติผู้ใช้งาน
  approvedAt      DateTime?    // วันที่อนุมัติ
  approvedBy      String?      // ผู้อนุมัติ (User ID)
  rejectedAt      DateTime?    // วันที่ปฏิเสธ
  rejectedBy      String?      // ผู้ปฏิเสธ (User ID)
  rejectionReason String?      // เหตุผลการปฏิเสธ
  
  // การติดตาม changes
  lastModifiedBy  String?      // ผู้แก้ไขล่าสุด (User ID)
  statusChangedAt DateTime?    // วันที่เปลี่ยนสถานะล่าสุด
  statusHistory   Json?        // ประวัติการเปลี่ยนสถานะ
  
  // ข้อมูลเพิ่มเติมสำหรับการอนุมัติ
  applicationNotes String?     // หมายเหตุใบสมัคร
  approvalNotes   String?      // หมายเหตุการอนุมัติ
  requestedRole   Role?        // บทบาทที่ขอ (อาจแตกต่างจากที่ได้รับ)
  
  // ================================
  // AUDIT FIELDS
  // ================================
  
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  createdBy     String?     // ผู้สร้างบัญชี
  
  // ================================
  // BETTER AUTH COMPATIBILITY
  // ================================
  
  // Better Auth required relations
  accounts      Account[]
  sessions      Session[]
  
  // ================================
  // RELATIONS (All opposite fields)
  // ================================
  
  // Authentication Relations (existing)
  refreshTokens            RefreshToken[]
  passwordResetTokens      PasswordResetToken[]
  emailVerificationTokens  EmailVerificationToken[]
  loginAttempts            LoginAttempt[]
  
  // Department & Warehouse Management
  departmentsManaged       Department[]     @relation("DepartmentHead")
  warehousesManaged        Warehouse[]      @relation("WarehouseManager")
  
  // Stock Management
  stockTransactions        StockTransaction[]
  stockCountsAsCounter     StockCount[]     @relation("StockCounter")
  stockCountsAsVerifier    StockCount[]     @relation("StockCountVerifier")
  
  // Requisition System
  requisitionsCreated      Requisition[]    @relation("RequesterRelation")
  requisitionsApproved     Requisition[]    @relation("ApproverRelation")
  requisitionsFulfilled    Requisition[]    @relation("FulfillerRelation")
  workflowActions          RequisitionWorkflow[]
  requisitionAttachments   RequisitionAttachment[]
  requisitionTemplatesCreated RequisitionTemplate[]
  
  // Supplier Management
  purchaseOrdersCreated    PurchaseOrder[]  @relation("POOrderer")
  purchaseOrdersApproved   PurchaseOrder[]  @relation("POApprover")
  goodsReceiptsReceived    GoodsReceipt[]   @relation("GRReceiver")
  goodsReceiptsVerified    GoodsReceipt[]   @relation("GRVerifier")
  supplierEvaluations      SupplierEvaluation[]
  
  // Analytics & Reporting
  reportsRequested         Report[]
  dashboards               Dashboard[]
  systemUsageLogs          SystemUsage[]
  
  // Audit & Compliance
  auditLogs                AuditLog[]
  dataAccessLogs           DataAccessLog[]
  complianceChecksPerformed ComplianceCheck[] @relation("ComplianceChecker")
  complianceChecksReviewed ComplianceCheck[] @relation("ComplianceReviewer")
  controlledSubstanceLogsHandled ControlledSubstanceLog[] @relation("CSLHandler")
  controlledSubstanceLogsWitnessed ControlledSubstanceLog[] @relation("CSLWitness")
  controlledSubstanceLogsAuthorized ControlledSubstanceLog[] @relation("CSLAuthorizer")
  internalAudits           InternalAudit[]
  securityIncidentsReported SecurityIncident[] @relation("SecurityReporter")
  securityIncidentsSuspected SecurityIncident[] @relation("SuspectedUser")
  securityIncidentsInvestigated SecurityIncident[] @relation("Investigator")
  
  // Notifications
  notificationPreferences  NotificationPreference[]
  notifications            NotificationUser[]
  
  // ================================
  // USER APPROVAL RELATIONS
  // ================================
  
  // ผู้ใช้ที่อนุมัติโดยผู้ใช้นี้
  usersApproved           User[] @relation("UserApprover")
  usersRejected           User[] @relation("UserRejecter")
  
  // ผู้ที่อนุมัติ/ปฏิเสธผู้ใช้นี้
  approver                User?  @relation("UserApprover", fields: [approvedBy], references: [id], onDelete: SetNull)
  rejecter                User?  @relation("UserRejecter", fields: [rejectedBy], references: [id], onDelete: SetNull)
  
  // ================================
  // MASTER DATA MANAGEMENT RELATIONS
  // ================================
  
  // Master Data Creation/Management
  personnelTypesCreated   PersonnelType[] // Personnel types ที่สร้าง
  drugFormsCreated        DrugForm[]      // Drug forms ที่สร้าง
  drugGroupsCreated       DrugGroup[]     // Drug groups ที่สร้าง
  drugTypesCreated        DrugType[]      // Drug types ที่สร้าง
  drugStorageCreated      DrugStorage[]   // Drug storage conditions ที่สร้าง
  
  @@index([hospitalId])
  @@index([role])
  @@index([status])
  @@index([personnelTypeId])
  @@map("users")
}

// ================================
// BETTER AUTH REQUIRED MODELS
// ================================

model Account {
  id                String  @id @default(uuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  
  // Relation to User
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  // Better Auth requirement
  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(uuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  
  // Additional session fields
  ipAddress    String?
  userAgent    String?
  isActive     Boolean  @default(true)
  
  // Relation to User
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  // Audit fields
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  
  @@index([userId])
  @@index([sessionToken])
  @@index([expires])
  @@map("sessions")
}

// ================================
// EXISTING AUTH MODELS (Updated)
// ================================

model RefreshToken {
  id        String   @id @default(uuid())
  
  // ความสัมพันธ์กับผู้ใช้
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  // ข้อมูล token
  token     String   @unique
  expiresAt DateTime
  
  // สถานะ
  isRevoked Boolean  @default(false)
  
  // Audit fields
  createdAt DateTime @default(now())
  
  @@index([userId])
  @@index([token])
  @@map("refresh_tokens")
}

model PasswordResetToken {
  id        String   @id @default(uuid())
  
  // ความสัมพันธ์กับผู้ใช้
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  // ข้อมูล token
  token     String   @unique
  expiresAt DateTime
  
  // สถานะ
  isUsed    Boolean  @default(false)
  
  // Audit fields
  createdAt DateTime @default(now())
  
  @@index([userId])
  @@index([token])
  @@map("password_reset_tokens")
}

model EmailVerificationToken {
  id        String   @id @default(uuid())
  
  // ความสัมพันธ์กับผู้ใช้
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  // ข้อมูล token
  token     String   @unique
  expiresAt DateTime
  
  // สถานะ
  isUsed    Boolean  @default(false)
  
  // Audit fields
  createdAt DateTime @default(now())
  
  @@index([userId])
  @@index([token])
  @@map("email_verification_tokens")
}

model LoginAttempt {
  id        String   @id @default(uuid())
  
  // ความสัมพันธ์กับผู้ใช้ (nullable สำหรับ failed attempts)
  userId    String?
  user      User?    @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  // ข้อมูลการพยายามเข้าสู่ระบบ
  email     String
  ipAddress String
  userAgent String?
  
  // ผลลัพธ์
  success   Boolean
  failureReason String?
  
  // Audit fields
  createdAt DateTime @default(now())
  
  @@index([userId])
  @@index([email])
  @@index([ipAddress])
  @@index([createdAt])
  @@map("login_attempts")
}