// This file is auto-generated. Do not edit manually.
// Edit files in prisma/schemas/ directory instead.
// Last generated: 2025-08-04T12:07:07.253Z

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}


// ==========================================
// AUTH
// ==========================================

// prisma/schemas/auth.prisma
// Authentication and User Management Schema
// ระบบจัดการผู้ใช้และการยืนยันตัวตนสำหรับ Hospital Pharmacy System

enum Role {
  HOSPITAL_ADMIN      // ผู้ดูแลระบบโรงพยาบาล - สิทธิ์เต็ม
  PHARMACY_MANAGER    // ผู้จัดการเภสัชกรรม - จัดการสต็อกและอนุมัติ
  SENIOR_PHARMACIST   // เภสัชกรอาวุโส - จัดการสต็อกและจ่ายยา
  STAFF_PHARMACIST    // เภสัชกรประจำ - จ่ายยาและรับสต็อก
  DEPARTMENT_HEAD     // หัวหน้าแผนก - เบิกยาและจัดการงบประมาณ
  STAFF_NURSE         // พยาบาลประจำ - เบิกยาพื้นฐาน
  PHARMACY_TECHNICIAN // เทคนิคเภสัชกรรม - รับสต็อกและจัดระเบียบ
}

enum UserStatus {
  PENDING   // รอการอนุมัติ
  ACTIVE    // ใช้งานได้
  INACTIVE  // ปิดการใช้งานชั่วคราว
  SUSPENDED // ระงับการใช้งาน
  DELETED   // ลบแล้ว (soft delete)
}

model User {
  id            String      @id @default(uuid())
  
  // ข้อมูลพื้นฐาน
  email         String      @unique
  name          String
  username      String      @unique  // เพิ่มสำหรับ login
  firstName     String?     // ชื่อ
  lastName      String?     // นามสกุล
  phoneNumber   String?
  employeeId    String?     // รหัสพนักงาน
  position      String?     // ตำแหน่ง
  
  // การยืนยันตัวตน
  emailVerified Boolean     @default(false)
  password      String?     // hashed password
  
  // Profile completion tracking
  isProfileComplete Boolean @default(false)
  
  // บทบาทและสิทธิ์
  role          Role
  status        UserStatus  @default(PENDING)
  
  // ความสัมพันธ์กับโรงพยาบาล
  hospitalId    String
  hospital      Hospital    @relation(fields: [hospitalId], references: [id], onDelete: Cascade)
  
  // ความสัมพันธ์กับแผนก (optional สำหรับ pharmacy staff)
  departmentId  String?
  department    Department? @relation(fields: [departmentId], references: [id], onDelete: SetNull)
  
  // การติดตามการเข้าสู่ระบบ
  lastLoginAt   DateTime?
  lastLoginIP   String?
  loginCount    Int         @default(0)
  
  // Audit fields
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  createdBy     String?     // ผู้สร้างบัญชี
  lastModifiedBy String?    // ผู้แก้ไขล่าสุด
  
  // ================================
  // BETTER AUTH COMPATIBILITY
  // ================================
  
  // Better Auth required relations
  accounts      Account[]
  sessions      Session[]
  
  // ================================
  // RELATIONS (All opposite fields)
  // ================================
  
  // Authentication Relations (existing)
  refreshTokens            RefreshToken[]
  passwordResetTokens      PasswordResetToken[]
  emailVerificationTokens  EmailVerificationToken[]
  loginAttempts            LoginAttempt[]
  
  // Department & Warehouse Management
  departmentsManaged       Department[]     @relation("DepartmentHead")
  warehousesManaged        Warehouse[]      @relation("WarehouseManager")
  
  // Stock Management
  stockTransactions        StockTransaction[]
  stockCountsAsCounter     StockCount[]     @relation("StockCounter")
  stockCountsAsVerifier    StockCount[]     @relation("StockCountVerifier")
  
  // Requisition System
  requisitionsCreated      Requisition[]    @relation("RequesterRelation")
  requisitionsApproved     Requisition[]    @relation("ApproverRelation")
  requisitionsFulfilled    Requisition[]    @relation("FulfillerRelation")
  workflowActions          RequisitionWorkflow[]
  requisitionAttachments   RequisitionAttachment[]
  requisitionTemplatesCreated RequisitionTemplate[]
  
  // Supplier Management
  purchaseOrdersCreated    PurchaseOrder[]  @relation("POOrderer")
  purchaseOrdersApproved   PurchaseOrder[]  @relation("POApprover")
  goodsReceiptsReceived    GoodsReceipt[]   @relation("GRReceiver")
  goodsReceiptsVerified    GoodsReceipt[]   @relation("GRVerifier")
  supplierEvaluations      SupplierEvaluation[]
  
  // Analytics & Reporting
  reportsRequested         Report[]
  dashboards               Dashboard[]
  systemUsageLogs          SystemUsage[]
  
  // Audit & Compliance
  auditLogs                AuditLog[]
  dataAccessLogs           DataAccessLog[]
  complianceChecksPerformed ComplianceCheck[] @relation("ComplianceChecker")
  complianceChecksReviewed ComplianceCheck[] @relation("ComplianceReviewer")
  controlledSubstanceLogsHandled ControlledSubstanceLog[] @relation("CSLHandler")
  controlledSubstanceLogsWitnessed ControlledSubstanceLog[] @relation("CSLWitness")
  controlledSubstanceLogsAuthorized ControlledSubstanceLog[] @relation("CSLAuthorizer")
  internalAudits           InternalAudit[]
  securityIncidentsReported SecurityIncident[] @relation("SecurityReporter")
  securityIncidentsSuspected SecurityIncident[] @relation("SuspectedUser")
  securityIncidentsInvestigated SecurityIncident[] @relation("Investigator")
  
  // Notifications
  notificationPreferences  NotificationPreference[]
  notifications            NotificationUser[]
  
  @@map("users")
}

// ================================
// BETTER AUTH REQUIRED MODELS
// ================================

model Account {
  id                String  @id @default(uuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  
  // Relation to User
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  // Better Auth requirement
  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(uuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  
  // Additional session fields
  ipAddress    String?
  userAgent    String?
  isActive     Boolean  @default(true)
  
  // Relation to User
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  // Audit fields
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  
  @@index([userId])
  @@index([sessionToken])
  @@index([expires])
  @@map("sessions")
}

// ================================
// EXISTING AUTH MODELS (Updated)
// ================================

model RefreshToken {
  id        String   @id @default(uuid())
  
  // ความสัมพันธ์กับผู้ใช้
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  // ข้อมูล token
  token     String   @unique
  expiresAt DateTime
  
  // สถานะ
  isRevoked Boolean  @default(false)
  
  // Audit fields
  createdAt DateTime @default(now())
  
  @@index([userId])
  @@index([token])
  @@map("refresh_tokens")
}

model PasswordResetToken {
  id        String   @id @default(uuid())
  
  // ความสัมพันธ์กับผู้ใช้
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  // ข้อมูล token
  token     String   @unique
  expiresAt DateTime
  
  // สถานะ
  isUsed    Boolean  @default(false)
  
  // Audit fields
  createdAt DateTime @default(now())
  
  @@index([userId])
  @@index([token])
  @@map("password_reset_tokens")
}

model EmailVerificationToken {
  id        String   @id @default(uuid())
  
  // ความสัมพันธ์กับผู้ใช้
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  // ข้อมูล token
  token     String   @unique
  expiresAt DateTime
  
  // สถานะ
  isUsed    Boolean  @default(false)
  
  // Audit fields
  createdAt DateTime @default(now())
  
  @@index([userId])
  @@index([token])
  @@map("email_verification_tokens")
}

model LoginAttempt {
  id        String   @id @default(uuid())
  
  // ความสัมพันธ์กับผู้ใช้ (nullable สำหรับ failed attempts)
  userId    String?
  user      User?    @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  // ข้อมูลการพยายามเข้าสู่ระบบ
  email     String
  ipAddress String
  userAgent String?
  
  // ผลลัพธ์
  success   Boolean
  failureReason String?
  
  // Audit fields
  createdAt DateTime @default(now())
  
  @@index([userId])
  @@index([email])
  @@index([ipAddress])
  @@index([createdAt])
  @@map("login_attempts")
}

// ==========================================
// HOSPITAL CORE
// ==========================================

// prisma/schemas/hospital-core.prisma
// Hospital Core Management Schema
// ระบบจัดการโรงพยาบาลและแผนกหลักสำหรับ Hospital Pharmacy System

enum HospitalStatus {
  ACTIVE          // ใช้งานได้
  INACTIVE        // ปิดการใช้งานชั่วคราว
  SUSPENDED       // ระงับการใช้งาน
  PENDING         // รอการอนุมัติ
  MAINTENANCE     // อยู่ระหว่างบำรุงรักษา
}

enum HospitalType {
  GOVERNMENT      // โรงพยาบาลรัฐ
  PRIVATE         // โรงพยาบาลเอกชน
  UNIVERSITY      // โรงพยาบาลมหาวิทยาลัย
  MILITARY        // โรงพยาบาลทหาร
  POLICE          // โรงพยาบาลตำรวจ
  COMMUNITY       // โรงพยาบาลชุมชน
  SPECIALIZED     // โรงพยาบาลเฉพาะทาง
}

model Hospital {
  id              String          @id @default(uuid())
  
  // ข้อมูลพื้นฐาน
  name            String
  nameEn          String?         // ชื่อภาษาอังกฤษ
  hospitalCode    String          @unique // รหัสโรงพยาบาล
  
  // ประเภทและสถานะ
  type            HospitalType
  status          HospitalStatus  @default(PENDING)
  
  // ข้อมูลการจดทะเบียน
  licenseNo       String?         // เลขที่ใบอนุญาต
  licenseExpiry   DateTime?       // วันหมดอายุใบอนุญาต
  taxId           String?         // เลขประจำตัวผู้เสียภาษี
  registrationNo  String?         // เลขที่จดทะเบียน
  
  // ที่อยู่
  address         String
  district        String?         // ตำบล/แขวง
  subDistrict     String?         // อำเภอ/เขต
  province        String
  postalCode      String?
  country         String          @default("Thailand")
  
  // ข้อมูลติดต่อ
  phone           String?
  fax             String?
  email           String?
  website         String?
  
  // ข้อมูลเพิ่มเติม
  bedCount        Int?            // จำนวนเตียง
  employeeCount   Int?            // จำนวนพนักงาน
  establishedYear Int?            // ปีที่ก่อตั้ง
  
  // การตั้งค่าระบบ
  timezone        String          @default("Asia/Bangkok")
  locale          String          @default("th-TH")
  currency        String          @default("THB")
  
  // การสมัครสมาชิก
  subscriptionPlan String?        // แผนการใช้งาน
  subscriptionStart DateTime?     // วันเริ่มใช้งาน
  subscriptionEnd DateTime?       // วันสิ้นสุด
  maxUsers        Int?            // จำนวนผู้ใช้สูงสุด
  maxWarehouses   Int?            // จำนวนคลังสูงสุด
  
  // การติดตาม
  lastActivityAt  DateTime?       // กิจกรรมล่าสุด
  isTrialAccount  Boolean         @default(false)
  
  // Audit fields
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @updatedAt
  
  // ================================
  // RELATIONS (Fixed opposite fields)
  // ================================
  
  // Core Relations
  users           User[]
  departments     Department[]
  warehouses      Warehouse[]
  
  // Drug & Inventory Relations
  drugs           Drug[]
  stockCards      StockCard[]
  stockCounts     StockCount[]
  
  // Requisition Relations
  requisitions    Requisition[]
  requisitionTemplates RequisitionTemplate[]
  
  // Supplier Relations
  purchaseOrders  PurchaseOrder[]
  goodsReceipts   GoodsReceipt[]
  supplierEvaluations SupplierEvaluation[]
  
  // Analytics Relations
  reports         Report[]
  dashboards      Dashboard[]
  systemUsage     SystemUsage[]
  
  // Audit Relations
  auditLogs       AuditLog[]
  dataAccessLogs  DataAccessLog[]
  complianceChecks ComplianceCheck[]
  controlledSubstanceLogs ControlledSubstanceLog[]
  internalAudits  InternalAudit[]
  securityIncidents SecurityIncident[]
  
  // Notification Relations
  notifications   Notification[]
  
  // Drug Information Relations
  drugCategories  DrugCategory[]
  drugInteractions DrugInteraction[]
  drugAllergens   DrugAllergen[]
  
  @@index([hospitalCode])
  @@index([status])
  @@index([type])
  @@map("hospitals")
}

enum DepartmentType {
  PHARMACY        // เภสัชกรรม
  EMERGENCY       // ฉุกเฉิน
  ICU             // หอผู้ป่วยวิกฤต
  SURGERY         // ศลยกรรม
  MEDICINE        // อายุรกรรม
  PEDIATRICS      // กุมารเวชกรรม
  OBSTETRICS      // สูติกรรม
  ORTHOPEDICS     // ออร์โธปิดิกส์
  CARDIOLOGY      // หัวใจ
  NEUROLOGY       // ประสาท
  ONCOLOGY        // มะเร็งวิทยา
  PSYCHIATRY      // จิตเวช
  RADIOLOGY       // รังสีวิทยา
  LABORATORY      // ห้องปฏิบัติการ
  OUTPATIENT      // ผู้ป่วยนอก
  INPATIENT       // ผู้ป่วยใน
  ADMINISTRATION  // บริหาร
  OTHER           // อื่นๆ
}

model Department {
  id              String          @id @default(uuid())
  
  // ความสัมพันธ์
  hospitalId      String
  hospital        Hospital        @relation(fields: [hospitalId], references: [id], onDelete: Cascade)
  
  // ข้อมูลแผนก
  name            String
  nameEn          String?         // ชื่อภาษาอังกฤษ
  departmentCode  String          // รหัสแผนก
  type            DepartmentType
  
  // โครงสร้างองค์กร
  parentDepartmentId String?      // แผนกแม่
  parentDepartment Department?    @relation("DepartmentHierarchy", fields: [parentDepartmentId], references: [id], onDelete: SetNull)
  childDepartments Department[]   @relation("DepartmentHierarchy")
  
  // ผู้รับผิดชอบ
  headOfDepartmentId String?      // หัวหน้าแผนก
  headOfDepartment User?          @relation("DepartmentHead", fields: [headOfDepartmentId], references: [id], onDelete: SetNull)
  
  // ข้อมูลเพิ่มเติม
  location        String?         // ตำแหน่งที่ตั้ง (ชั้น, อาคาร)
  phone           String?         // เบอร์โทรศัพท์
  email           String?         // อีเมล
  
  // การตั้งค่าการเบิกยา
  allowRequisition Boolean        @default(true) // อนุญาตให้เบิกยาได้
  requireApproval Boolean         @default(false) // ต้องการการอนุมัติ
  maxRequisitionValue Decimal?    // มูลค่าเบิกสูงสุด
  
  // งบประมาณ
  budgetLimit     Decimal?        // วงเงินงบประมาณ
  currentSpending Decimal         @default(0) // การใช้จ่ายปัจจุบัน
  
  // สถานะ
  isActive        Boolean         @default(true)
  
  // Audit fields
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @updatedAt
  
  // ================================
  // RELATIONS (Fixed opposite fields)
  // ================================
  
  // User Relations
  users           User[]          // พนักงานในแผนก
  
  // Requisition Relations
  requisitions    Requisition[]   @relation("RequestingDepartment")
  requisitionTemplates RequisitionTemplate[]
  
  @@unique([hospitalId, departmentCode])
  @@index([hospitalId])
  @@index([type])
  @@index([isActive])
  @@map("departments")
}

enum WarehouseType {
  CENTRAL         // คลังกลาง
  DEPARTMENT      // คลังแผนก
  EMERGENCY       // คลังฉุกเฉิน
  CONTROLLED      // คลังยาควบคุม
  COLD_STORAGE    // ห้องเย็น
  QUARANTINE      // ห้องกักกัน
  DISPOSAL        // ห้องทำลาย
  RECEIVING       // ห้องรับของ
  DISPENSING      // ห้องจ่ายยา
}

model Warehouse {
  id              String          @id @default(uuid())
  
  // ความสัมพันธ์
  hospitalId      String
  hospital        Hospital        @relation(fields: [hospitalId], references: [id], onDelete: Cascade)
  
  // ข้อมูลคลัง
  name            String
  warehouseCode   String          // รหัสคลัง
  type            WarehouseType
  
  // ตำแหน่งที่ตั้ง
  location        String          // ตำแหน่ง (อาคาร, ชั้น, ห้อง)
  address         String?         // ที่อยู่โดยละเอียด
  
  // ผู้รับผิดชอบ
  managerId       String?         // ผู้จัดการคลัง
  manager         User?           @relation("WarehouseManager", fields: [managerId], references: [id], onDelete: SetNull)
  
  // ข้อมูลทางเทคนิค
  area            Decimal?        // พื้นที่ (ตารางเมตร)
  capacity        Decimal?        // ความจุ (หน่วยสินค้า)
  
  // การควบคุมสิ่งแวดล้อม
  hasTemperatureControl Boolean   @default(false) // ควบคุมอุณหภูมิ
  minTemperature  Decimal?        // อุณหภูมิต่ำสุด (°C)
  maxTemperature  Decimal?        // อุณหภูมิสูงสุด (°C)
  hasHumidityControl Boolean      @default(false) // ควบคุมความชื้น
  minHumidity     Decimal?        // ความชื้นต่ำสุด (%)
  maxHumidity     Decimal?        // ความชื้นสูงสุด (%)
  
  // ความปลอดภัย
  securityLevel   String          @default("STANDARD") // "BASIC", "STANDARD", "HIGH", "MAXIMUM"
  accessControl   Boolean         @default(false) // ควบคุมการเข้าถึง
  cctv            Boolean         @default(false) // กล้องวงจรปิด
  alarm           Boolean         @default(false) // ระบบเตือนภัย
  
  // การตั้งค่าการดำเนินงาน
  allowReceiving  Boolean         @default(true) // อนุญาตให้รับของ
  allowDispensing Boolean         @default(true) // อนุญาตให้จ่ายของ
  allowTransfer   Boolean         @default(true) // อนุญาตให้โอน
  requireApproval Boolean         @default(false) // ต้องการการอนุมัติ
  
  // สถานะ
  isActive        Boolean         @default(true)
  isMaintenance   Boolean         @default(false) // อยู่ระหว่างบำรุงรักษา
  
  // การติดตาม
  lastStockCount  DateTime?       // การนับสต็อกครั้งล่าสุด
  totalValue      Decimal         @default(0) // มูลค่าสินค้ารวม
  totalItems      Int             @default(0) // จำนวนรายการสินค้า
  
  // หมายเหตุ
  description     String?
  notes           String?
  
  // Audit fields
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @updatedAt
  
  // ================================
  // RELATIONS (Fixed opposite fields)
  // ================================
  
  // Stock Relations
  stockCards      StockCard[]
  stockCounts     StockCount[]
  stockTransactions StockTransaction[]
  
  // Transfer Relations  
  transfersOut    StockTransaction[] @relation("TransferFrom")
  transfersIn     StockTransaction[] @relation("TransferTo")
  
  // Requisition Relations
  requisitions    Requisition[]   @relation("FulfillmentWarehouse")
  
  @@unique([hospitalId, warehouseCode])
  @@index([hospitalId])
  @@index([type])
  @@index([isActive])
  @@map("warehouses")
}

model Drug {
  id              String          @id @default(uuid())
  
  // ความสัมพันธ์
  hospitalId      String
  hospital        Hospital        @relation(fields: [hospitalId], references: [id], onDelete: Cascade)
  
  // ข้อมูลยาพื้นฐาน
  hospitalDrugCode String         // รหัสยาของโรงพยาบาล
  name            String          // ชื่อยา
  genericName     String?         // ชื่อสามัญ
  brandName       String?         // ชื่อการค้า
  
  // รูปแบบยา
  dosageForm      String          // รูปแบบ (tablet, capsule, injection, etc.)
  strength        String?         // ความแรง (500mg, 10mg/ml, etc.)
  unit            String          // หน่วยนับ (tablet, vial, bottle, etc.)
  
  // การจำแนกประเภท
  therapeuticClass String?        // หมวดยาตามการรักษา
  pharmacologicalClass String?   // หมวดยาตามเภสัชวิทยา
  atcCode         String?         // รหัส ATC
  
  // ผู้ผลิต
  manufacturer    String?         // บริษัทผู้ผลิต
  countryOfOrigin String?         // ประเทศผู้ผลิต
  registrationNo  String?         // เลขทะเบียนตำรับยา
  
  // การควบคุม
  isControlled    Boolean         @default(false) // ยาควบคุม
  isNarcotic      Boolean         @default(false) // ยาเสพติด
  isPsychotropic  Boolean         @default(false) // ยาจิตเวช
  isDangerous     Boolean         @default(false) // ยาอันตราย
  isHazardous     Boolean         @default(false) // ยาอันตรายต่อสิ่งแวดล้อม
  
  // การจัดเก็บ
  storageCondition String?        // เงื่อนไขการเก็บ
  storageTemperature String?      // อุณหภูมิการเก็บ
  requiresColdChain Boolean       @default(false) // ต้องควบคุมห่วงโซ่ความเย็น
  lightSensitive  Boolean         @default(false) // ไวต่อแสง
  moistureSensitive Boolean       @default(false) // ไวต่อความชื้น
  
  // ข้อมูลทางเศรษฐกิจ
  unitCost        Decimal?        // ต้นทุนต่อหน่วย
  sellingPrice    Decimal?        // ราคาขาย
  reimbursementPrice Decimal?     // ราคาที่เบิกได้
  averageCost     Decimal?        // ต้นทุนเฉลี่ย
  
  // การใช้งาน
  isActive        Boolean         @default(true)
  isFormulary     Boolean         @default(false) // อยู่ในบัญชียาหลัก
  isEmergencyDrug Boolean         @default(false) // ยาฉุกเฉิน
  isHighAlert     Boolean         @default(false) // ยาเสี่ยงสูง
  
  // การจำหน่าย
  requiresPrescription Boolean    @default(true) // ต้องมีใบสั่งแพทย์
  maxDispenseQty  Int?            // จำนวนจ่ายสูงสุดต่อครั้ง
  maxDailyDose    String?         // ขนาดรับประทานสูงสุดต่อวัน
  
  // ข้อมูลบรรจุภัณฑ์
  packageSize     Int?            // ขนาดบรรจุ
  packageUnit     String?         // หน่วยบรรจุ
  packageType     String?         // ประเภทบรรจุภัณฑ์
  
  // วันที่สำคัญ
  registrationDate DateTime?      // วันที่ขึ้นทะเบียน
  approvalDate    DateTime?       // วันที่อนุมัติใช้
  discontinuedDate DateTime?      // วันที่หยุดใช้
  lastReviewDate  DateTime?       // วันที่ทบทวนล่าสุด
  nextReviewDate  DateTime?       // วันที่ทบทวนครั้งต่อไป
  
  // หมายเหตุและคำแนะนำ
  indications     String?         // ข้อบ่งใช้
  contraindications String?       // ข้อห้ามใช้
  sideEffects     String?         // ผลข้างเคียง
  interactions    String?         // ปฏิกิริยาระหว่างยา
  dosageInstructions String?      // วิธีใช้
  precautions     String?         // ข้อควรระวัง
  warnings        String?         // คำเตือน
  notes           String?         // หมายเหตุเพิ่มเติม
  
  // การติดตาม
  monthlyUsage    Int             @default(0) // การใช้เฉลี่ยต่อเดือน
  yearlyUsage     Int             @default(0) // การใช้ต่อปี
  lastUsageUpdate DateTime?       // อัพเดทการใช้ล่าสุด
  
  // คะแนนและการประเมิน
  popularityScore Decimal?        // คะแนนความนิยม
  criticalityScore Decimal?       // คะแนนความสำคัญ
  safetyScore     Decimal?        // คะแนนความปลอดภัย
  
  // ข้อมูล Barcode และ QR Code
  barcode         String?         // บาร์โค้ด
  qrCode          String?         // QR โค้ด
  
  // Audit fields
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @updatedAt
  
  // ================================
  // RELATIONS (Fixed opposite fields)
  // ================================
  
  // Stock Relations
  stockCards      StockCard[]
  stockTransactions StockTransaction[]
  
  // Requisition Relations
  requisitionItems RequisitionItem[]
  
  // Supplier Relations
  supplierProducts SupplierProduct[]
  purchaseOrderItems PurchaseOrderItem[]
  goodsReceiptItems GoodsReceiptItem[]
  
  // Compliance Relations
  controlledSubstanceLogs ControlledSubstanceLog[]
  
  // Drug Information Relations
  drug1Interactions DrugInteraction[] @relation("Drug1Interactions")
  drug2Interactions DrugInteraction[] @relation("Drug2Interactions")
  allergens         DrugAllergen[]    @relation("DrugAllergens")
  
  @@unique([hospitalId, hospitalDrugCode])
  @@index([hospitalId])
  @@index([genericName])
  @@index([isActive])
  @@index([isControlled])
  @@index([isFormulary])
  @@index([barcode])
  @@map("drugs")
}

// =============================================
// DRUG CATEGORIES AND CLASSIFICATIONS
// =============================================

model DrugCategory {
  id              String      @id @default(uuid())
  
  // ความสัมพันธ์
  hospitalId      String
  hospital        Hospital    @relation(fields: [hospitalId], references: [id], onDelete: Cascade)
  
  // ข้อมูลหมวดหมู่
  categoryCode    String      // รหัสหมวดหมู่
  categoryName    String      // ชื่อหมวดหมู่
  description     String?     // คำอธิบาย
  
  // โครงสร้างหมวดหมู่
  parentCategoryId String?    // หมวดหมู่แม่
  parentCategory  DrugCategory? @relation("CategoryHierarchy", fields: [parentCategoryId], references: [id], onDelete: SetNull)
  childCategories DrugCategory[] @relation("CategoryHierarchy")
  
  // การจัดเรียง
  sortOrder       Int         @default(0)
  level           Int         @default(0) // ระดับของหมวดหมู่
  
  // สถานะ
  isActive        Boolean     @default(true)
  
  // Audit fields
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
  
  @@unique([hospitalId, categoryCode])
  @@index([hospitalId])
  @@index([isActive])
  @@map("drug_categories")
}

model DrugInteraction {
  id              String      @id @default(uuid())
  
  // ความสัมพันธ์
  hospitalId      String
  hospital        Hospital    @relation(fields: [hospitalId], references: [id], onDelete: Cascade)
  drug1Id         String      // ยาตัวที่ 1
  drug1           Drug        @relation("Drug1Interactions", fields: [drug1Id], references: [id], onDelete: Cascade)
  drug2Id         String      // ยาตัวที่ 2
  drug2           Drug        @relation("Drug2Interactions", fields: [drug2Id], references: [id], onDelete: Cascade)
  
  // ข้อมูลปฏิกิริยา
  interactionType String      // "CONTRAINDICATED", "MAJOR", "MODERATE", "MINOR"
  severity        String      // "CRITICAL", "HIGH", "MEDIUM", "LOW"
  
  // รายละเอียด
  description     String      // คำอธิบายปฏิกิริยา
  mechanism       String?     // กลไกการเกิดปฏิกิริยา
  clinicalEffect  String?     // ผลทางคลินิก
  management      String?     // การจัดการ
  
  // แหล่งข้อมูล
  source          String?     // แหล่งข้อมูล
  referenceUrl    String?     // URL อ้างอิง
  evidenceLevel   String?     // ระดับหลักฐาน
  
  // สถานะ
  isActive        Boolean     @default(true)
  
  // Audit fields
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
  
  @@unique([hospitalId, drug1Id, drug2Id])
  @@index([hospitalId])
  @@index([drug1Id])
  @@index([drug2Id])
  @@index([severity])
  @@map("drug_interactions")
}

model DrugAllergen {
  id              String      @id @default(uuid())
  
  // ความสัมพันธ์
  hospitalId      String
  hospital        Hospital    @relation(fields: [hospitalId], references: [id], onDelete: Cascade)
  drugId          String
  drug            Drug        @relation("DrugAllergens", fields: [drugId], references: [id], onDelete: Cascade)
  
  // ข้อมูลสารก่อภูมิแพ้
  allergenName    String      // ชื่อสารก่อภูมิแพ้
  allergenType    String      // ประเภท: "ACTIVE_INGREDIENT", "EXCIPIENT", "PRESERVATIVE", "DYE"
  
  // ความรุนแรง
  severity        String      // "MILD", "MODERATE", "SEVERE", "LIFE_THREATENING"
  
  // อาการ
  symptoms        String?     // อาการที่อาจเกิดขึ้น
  
  // การจัดการ
  management      String?     // วิธีการจัดการ
  alternatives    String?     // ยาทดแทน
  
  // สถานะ
  isActive        Boolean     @default(true)
  
  // Audit fields
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
  
  @@unique([hospitalId, drugId, allergenName])
  @@index([hospitalId])
  @@index([drugId])
  @@index([allergenName])
  @@map("drug_allergens")
}

// ==========================================
// INVENTORY
// ==========================================

// prisma/schemas/inventory.prisma
// Inventory Management Schema
// ระบบจัดการคลังยาและสต็อกสำหรับ Hospital Pharmacy System

enum TransactionType {
  RECEIVE         // รับยาจากซัพพลายเออร์
  DISPENSE        // จ่ายยาให้แผนก
  TRANSFER_OUT    // โอนออกไปคลังอื่น
  TRANSFER_IN     // รับโอนจากคลังอื่น
  ADJUST_INCREASE // ปรับเพิ่ม (การนับพบเพิ่ม)
  ADJUST_DECREASE // ปรับลด (การนับพบลด, เสียหาย)
  RETURN          // รับคืนยาจากแผนก
  DISPOSE         // ทำลายยาหมดอายุ/เสียหาย
  RESERVE         // จองยาสำหรับใบเบิก
  UNRESERVE       // ยกเลิกการจอง
  QUARANTINE      // เข้าห้องกักกัน
  RELEASE_QUARANTINE // ออกจากห้องกักกัน
  THEFT           // สูญหาย/ถูกขโมย
  DAMAGE          // เสียหายจากการเก็บรักษา
}

model StockTransaction {
  id               String          @id @default(uuid())
  
  // ความสัมพันธ์หลัก
  hospitalId       String
  warehouseId      String
  warehouse        Warehouse       @relation(fields: [warehouseId], references: [id], onDelete: Cascade)
  drugId           String
  drug             Drug            @relation(fields: [drugId], references: [id], onDelete: Cascade)
  stockCardId      String
  stockCard        StockCard       @relation(fields: [stockCardId], references: [id], onDelete: Cascade)
  batchId          String?
  batch            StockBatch?     @relation(fields: [batchId], references: [id], onDelete: SetNull)
  
  // รายละเอียดการทำรายการ
  transactionType  TransactionType
  quantity         Int             // จำนวน (+/-)
  unitCost         Decimal         // ต้นทุนต่อหน่วย
  totalCost        Decimal         // ต้นทุนรวม
  
  // จำนวนก่อนและหลัง
  stockBefore      Int             // สต็อกก่อนทำรายการ
  stockAfter       Int             // สต็อกหลังทำรายการ
  
  // การอ้างอิง
  referenceDocument String?        // เลขที่เอกสารอ้างอิง (PO, REQ, etc.)
  referenceId      String?         // ID ของเอกสารอ้างอิง
  notes            String?         // หมายเหตุ
  
  // การโอน (สำหรับ TRANSFER)
  fromWarehouseId  String?         // คลังต้นทาง
  fromWarehouse    Warehouse?      @relation("TransferFrom", fields: [fromWarehouseId], references: [id], onDelete: SetNull)
  toWarehouseId    String?         // คลังปลายทาง
  toWarehouse      Warehouse?      @relation("TransferTo", fields: [toWarehouseId], references: [id], onDelete: SetNull)
  
  // ผู้ดำเนินการ
  performedBy      String
  performer        User            @relation(fields: [performedBy], references: [id], onDelete: Restrict)
  
  // การอนุมัติ (สำหรับรายการที่ต้องอนุมัติ)
  requiresApproval Boolean         @default(false)
  approvedBy       String?
  approvedAt       DateTime?
  
  // ความสัมพันธ์กับใบเบิก
  requisitionId    String?
  requisition      Requisition?    @relation(fields: [requisitionId], references: [id], onDelete: SetNull)
  
  // การติดตาม
  isSystemGenerated Boolean        @default(false) // สร้างโดยระบบอัตโนมัติ
  ipAddress        String?
  userAgent        String?
  
  // Audit fields
  createdAt        DateTime        @default(now())
  updatedAt        DateTime        @updatedAt
  
  @@index([hospitalId, warehouseId])
  @@index([drugId])
  @@index([stockCardId])
  @@index([transactionType])
  @@index([createdAt])
  @@index([performedBy])
  @@index([requisitionId])
  @@map("stock_transactions")
}

enum BatchStatus {
  ACTIVE          // ใช้งานได้
  QUARANTINE      // กักกัน
  EXPIRED         // หมดอายุ
  RECALLED        // เรียกคืน
  DAMAGED         // เสียหาย
  DISPOSED        // ทำลายแล้ว
}

model StockBatch {
  id              String        @id @default(uuid())
  
  // ความสัมพันธ์
  hospitalId      String
  stockCardId     String
  stockCard       StockCard     @relation(fields: [stockCardId], references: [id], onDelete: Cascade)
  
  // ข้อมูล batch
  batchNumber     String        // หมายเลข batch
  manufacturingDate DateTime?   // วันที่ผลิต
  expiryDate      DateTime      // วันหมดอายุ
  
  // จำนวนสต็อก
  initialQty      Int           // จำนวนเริ่มต้น
  currentQty      Int           // จำนวนปัจจุบัน
  reservedQty     Int           @default(0) // จำนวนที่จอง
  availableQty    Int           // จำนวนที่พร้อมใช้ (computed: currentQty - reservedQty)
  
  // ข้อมูลการซื้อ
  supplierId      String?       // ซัพพลายเออร์
  purchaseOrderId String?       // หมายเลข PO
  invoiceNo       String?       // หมายเลขใบแจ้งหนี้
  
  // วันที่สำคัญ
  receivedDate    DateTime      // วันที่รับเข้า
  firstUsedDate   DateTime?     // วันที่ใช้ครั้งแรก
  
  // สถานะ
  status          BatchStatus   @default(ACTIVE)
  
  // การตรวจสอบคุณภาพ
  qcStatus        String?       // สถานะ QC: "PENDING", "PASSED", "FAILED"
  qcDate          DateTime?     // วันที่ตรวจสอบ QC
  qcNotes         String?       // หมายเหตุ QC
  
  // การจัดเก็บ
  storageLocation String?       // ตำแหน่งเก็บ
  storageCondition String?      // เงื่อนไขการเก็บ
  
  // Audit fields
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
  
  // Relations - เพิ่ม inverse relations
  transactions    StockTransaction[]
  stockCountItems StockCountItem[]
  
  @@unique([hospitalId, stockCardId, batchNumber])
  @@index([hospitalId, expiryDate])
  @@index([status])
  @@map("stock_batches")
}

model StockCard {
  id              String        @id @default(uuid())
  
  // ความสัมพันธ์
  hospitalId      String
  hospital        Hospital      @relation(fields: [hospitalId], references: [id], onDelete: Cascade)
  drugId          String
  drug            Drug          @relation(fields: [drugId], references: [id], onDelete: Cascade)
  warehouseId     String
  warehouse       Warehouse     @relation(fields: [warehouseId], references: [id], onDelete: Cascade)
  
  // รหัสสต็อกการ์ด
  cardNumber      String        @unique // เลขที่บัตรสต็อก
  
  // จำนวนสต็อก
  currentStock    Int           @default(0)
  reservedStock   Int           @default(0)
  availableStock  Int           @default(0) // currentStock - reservedStock
  
  // จุดสั่งซื้อ
  reorderPoint    Int           @default(0)
  reorderQty      Int           @default(0)
  maxStock        Int?          // สต็อกสูงสุด
  minStock        Int?          // สต็อกต่ำสุด
  
  // การคำนวณต้นทุน
  averageCost     Decimal       @default(0) // ต้นทุนเฉลี่ย
  lastCost        Decimal       @default(0) // ต้นทุนล่าสุด
  totalValue      Decimal       @default(0) // มูลค่ารวม
  
  // การติดตามการใช้งาน
  lastIssueDate   DateTime?     // วันที่จ่ายล่าสุด
  lastReceiveDate DateTime?     // วันที่รับล่าสุด
  monthlyUsage    Int           @default(0) // การใช้เฉลี่ยต่อเดือน
  
  // สถานะ
  isActive        Boolean       @default(true)
  isControlled    Boolean       @default(false) // ยาควบคุม
  isNarcotic      Boolean       @default(false) // ยาเสพติด
  
  // การแจ้งเตือน
  lowStockAlert   Boolean       @default(false)
  expiryAlert     Boolean       @default(false)
  overStockAlert  Boolean       @default(false)
  
  // หมายเหตุ
  notes           String?
  
  // Audit fields
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
  
  // Relations
  batches         StockBatch[]
  transactions    StockTransaction[]
  stockCounts     StockCountItem[]
  requisitionItems RequisitionItem[]
  
  @@unique([hospitalId, drugId, warehouseId])
  @@index([hospitalId, warehouseId])
  @@index([drugId])
  @@index([currentStock])
  @@index([isActive])
  @@map("stock_cards")
}

enum CountStatus {
  PLANNED         // วางแผนแล้ว
  IN_PROGRESS     // กำลังนับ
  COMPLETED       // เสร็จสิ้น
  VERIFIED        // ตรวจสอบแล้ว
  ADJUSTED        // ปรับปรุงแล้ว
  CANCELLED       // ยกเลิก
}

model StockCount {
  id              String        @id @default(uuid())
  
  // ความสัมพันธ์
  hospitalId      String
  hospital        Hospital      @relation(fields: [hospitalId], references: [id], onDelete: Cascade)
  warehouseId     String
  warehouse       Warehouse     @relation(fields: [warehouseId], references: [id], onDelete: Cascade)
  
  // รายละเอียดการนับ
  countNumber     String        @unique // เลขที่การนับ
  countType       String        // "FULL", "PARTIAL", "CYCLE", "SPOT"
  reason          String?       // เหตุผลการนับ
  
  // กำหนดการ
  scheduledDate   DateTime      // วันที่กำหนดนับ
  startedAt       DateTime?     // เวลาเริ่มนับ
  completedAt     DateTime?     // เวลาเสร็จสิ้น
  
  // สถานะ
  status          CountStatus   @default(PLANNED)
  
  // ผู้รับผิดชอบ
  countedBy       String
  counter         User          @relation("StockCounter", fields: [countedBy], references: [id], onDelete: Restrict)
  verifiedBy      String?
  verifier        User?         @relation("StockCountVerifier", fields: [verifiedBy], references: [id], onDelete: Restrict)
  
  // สรุปผล
  totalItems      Int           @default(0)
  itemsWithVariance Int         @default(0) // รายการที่มีส่วนต่าง
  totalVarianceValue Decimal    @default(0) // มูลค่าส่วนต่างรวม
  
  // การอนุมัติ
  requiresApproval Boolean      @default(false)
  approvedBy      String?
  approvedAt      DateTime?
  
  // หมายเหตุ
  notes           String?
  
  // Audit fields
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
  
  // Relations
  items           StockCountItem[]
  
  @@index([hospitalId, warehouseId])
  @@index([countedBy])
  @@index([status])
  @@index([scheduledDate])
  @@map("stock_counts")
}

model StockCountItem {
  id              String      @id @default(uuid())
  
  // ความสัมพันธ์
  stockCountId    String
  stockCount      StockCount  @relation(fields: [stockCountId], references: [id], onDelete: Cascade)
  stockCardId     String
  stockCard       StockCard   @relation(fields: [stockCardId], references: [id], onDelete: Cascade)
  batchId         String?
  batch           StockBatch? @relation(fields: [batchId], references: [id], onDelete: SetNull)
  
  // จำนวนในระบบและจำนวนนับได้
  systemQty       Int         // จำนวนในระบบ
  countedQty      Int         // จำนวนที่นับได้
  variance        Int         // ส่วนต่าง (countedQty - systemQty)
  varianceValue   Decimal     @default(0) // มูลค่าส่วนต่าง
  
  // การตรวจสอบ
  isVerified      Boolean     @default(false)
  verificationNotes String?
  
  // เหตุผลส่วนต่าง
  varianceReason  String?     // "DAMAGE", "THEFT", "EXPIRED", "MISPLACED", "SYSTEM_ERROR", "OTHER"
  adjustmentRequired Boolean  @default(false)
  
  // การติดตาม
  countedAt       DateTime?   // เวลาที่นับ
  verifiedAt      DateTime?   // เวลาที่ตรวจสอบ
  
  // หมายเหตุ
  notes           String?
  
  @@index([stockCountId])
  @@index([stockCardId])
  @@map("stock_count_items")
}

// ==========================================
// REQUISITIONS
// ==========================================

// prisma/schemas/requisitions.prisma
// Requisition Management Schema
// ระบบจัดการการเบิกจ่ายยาสำหรับ Hospital Pharmacy System

enum RequisitionStatus {
  DRAFT           // ร่าง
  SUBMITTED       // ส่งแล้ว
  UNDER_REVIEW    // อยู่ระหว่างตรวจสอบ
  APPROVED        // อนุมัติแล้ว
  PARTIALLY_FILLED // จ่ายบางส่วน
  COMPLETED       // เสร็จสิ้น
  CANCELLED       // ยกเลิก
  REJECTED        // ปฏิเสธ
}

enum RequisitionType {
  REGULAR         // การเบิกปกติ
  EMERGENCY       // การเบิกฉุกเฉิน
  SCHEDULED       // การเบิกตามตารางเวลา
  RETURN          // การส่งคืนยา
}

enum RequisitionPriority {
  LOW             // ความสำคัญต่ำ
  NORMAL          // ปกติ
  HIGH            // สูง
  URGENT          // เร่งด่วน
}

model Requisition {
  id              String              @id @default(uuid())
  
  // ความสัมพันธ์หลัก
  hospitalId      String
  hospital        Hospital            @relation(fields: [hospitalId], references: [id], onDelete: Cascade)
  
  // แผนกที่เบิก
  requestingDepartmentId String
  requestingDepartment   Department   @relation("RequestingDepartment", fields: [requestingDepartmentId], references: [id], onDelete: Cascade)
  
  // คลังที่จ่าย
  fulfillmentWarehouseId String
  fulfillmentWarehouse   Warehouse    @relation("FulfillmentWarehouse", fields: [fulfillmentWarehouseId], references: [id], onDelete: Cascade)
  
  // หมายเลขใบเบิก
  requisitionNumber   String          @unique
  referenceNumber     String?         // หมายเลขอ้างอิง
  
  // ประเภทและสถานะ
  type                RequisitionType
  status              RequisitionStatus @default(DRAFT)
  priority            RequisitionPriority @default(NORMAL)
  
  // วันที่สำคัญ
  requestedDate       DateTime        @default(now())
  requiredDate        DateTime        // วันที่ต้องการ
  approvedDate        DateTime?       // วันที่อนุมัติ
  fulfilledDate       DateTime?       // วันที่จ่ายเสร็จ
  
  // ผู้รับผิดชอบ
  requesterId         String
  requester           User            @relation("RequesterRelation", fields: [requesterId], references: [id], onDelete: Restrict)
  approverId          String?
  approver            User?           @relation("ApproverRelation", fields: [approverId], references: [id], onDelete: Restrict)
  fulfillerId         String?
  fulfiller           User?           @relation("FulfillerRelation", fields: [fulfillerId], references: [id], onDelete: Restrict)
  
  // สรุปใบเบิก
  totalItems          Int             @default(0)
  totalRequestedQty   Int             @default(0)
  totalApprovedQty    Int             @default(0)
  totalFulfilledQty   Int             @default(0)
  estimatedValue      Decimal         @default(0)
  actualValue         Decimal         @default(0)
  
  // หมายเหตุ
  requestNotes        String?         // หมายเหตุการเบิก
  approvalNotes       String?         // หมายเหตุการอนุมัติ
  fulfillmentNotes    String?         // หมายเหตุการจ่าย
  rejectionReason     String?         // เหตุผลการปฏิเสธ
  
  // การติดตาม
  isUrgent            Boolean         @default(false)
  isRecurring         Boolean         @default(false)
  recurringPattern    String?         // รูปแบบการเบิกประจำ
  
  // Audit fields
  createdAt           DateTime        @default(now())
  updatedAt           DateTime        @updatedAt
  
  // ================================
  // RELATIONS (Fixed opposite fields)
  // ================================
  items               RequisitionItem[]
  workflow            RequisitionWorkflow[]
  transactions        StockTransaction[] // Fixed: เพิ่ม relation กลับ
  attachments         RequisitionAttachment[]
  
  @@index([hospitalId])
  @@index([requestingDepartmentId])
  @@index([fulfillmentWarehouseId])
  @@index([status])
  @@index([requestedDate])
  @@index([priority])
  @@map("requisitions")
}

model RequisitionItem {
  id              String      @id @default(uuid())
  
  // ความสัมพันธ์
  requisitionId   String
  requisition     Requisition @relation(fields: [requisitionId], references: [id], onDelete: Cascade)
  drugId          String
  drug            Drug        @relation(fields: [drugId], references: [id], onDelete: Cascade)
  stockCardId     String?
  stockCard       StockCard?  @relation(fields: [stockCardId], references: [id], onDelete: SetNull)
  
  // จำนวน
  requestedQty    Int         // จำนวนที่เบิก
  approvedQty     Int?        // จำนวนที่อนุมัติ
  fulfilledQty    Int         @default(0) // จำนวนที่จ่ายแล้ว
  
  // ราคา
  unitCost        Decimal?    // ต้นทุนต่อหน่วย
  totalCost       Decimal     @default(0) // ต้นทุนรวม
  
  // สถานะรายการ
  status          String      @default("PENDING") // "PENDING", "APPROVED", "PARTIAL", "COMPLETED", "CANCELLED"
  
  // การระบุ batch (สำหรับการจ่าย)
  preferredBatch  String?     // batch ที่ต้องการ
  actualBatches   Json?       // batch ที่จ่ายจริง (array of {batchId, quantity})
  
  // หมายเหตุ
  requestNotes    String?     // หมายเหตุการเบิก
  approvalNotes   String?     // หมายเหตุการอนุมัติ
  fulfillmentNotes String?    // หมายเหตุการจ่าย
  
  // Audit fields
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
  
  @@index([requisitionId])
  @@index([drugId])
  @@index([status])
  @@map("requisition_items")
}

enum WorkflowAction {
  CREATE          // สร้างใบเบิก
  SUBMIT          // ส่งใบเบิก
  REVIEW          // ตรวจสอบ
  APPROVE         // อนุมัติ
  REJECT          // ปฏิเสธ
  FULFILL         // จ่ายยา
  PARTIAL_FULFILL // จ่ายบางส่วน
  COMPLETE        // เสร็จสิ้น
  CANCEL          // ยกเลิก
  REQUEST_INFO    // ขอข้อมูลเพิ่มเติม
  PROVIDE_INFO    // ให้ข้อมูลเพิ่มเติม
}

model RequisitionWorkflow {
  id              String          @id @default(uuid())
  
  // ความสัมพันธ์
  requisitionId   String
  requisition     Requisition     @relation(fields: [requisitionId], references: [id], onDelete: Cascade)
  userId          String
  user            User            @relation(fields: [userId], references: [id], onDelete: Restrict)
  
  // การดำเนินการ
  action          WorkflowAction
  fromStatus      RequisitionStatus?
  toStatus        RequisitionStatus?
  
  // รายละเอียด
  comments        String?
  attachments     Json?           // array of file paths/URLs
  
  // การติดตาม
  processedAt     DateTime        @default(now())
  ipAddress       String?
  userAgent       String?
  
  @@index([requisitionId])
  @@index([userId])
  @@index([action])
  @@index([processedAt])
  @@map("requisition_workflows")
}

model RequisitionAttachment {
  id              String      @id @default(uuid())
  
  // ความสัมพันธ์
  requisitionId   String
  requisition     Requisition @relation(fields: [requisitionId], references: [id], onDelete: Cascade)
  uploadedBy      String
  uploader        User        @relation(fields: [uploadedBy], references: [id], onDelete: Restrict)
  
  // ข้อมูลไฟล์
  fileName        String
  originalName    String
  fileSize        Int
  mimeType        String
  filePath        String      // path in storage
  
  // รายละเอียด
  description     String?
  category        String?     // "PRESCRIPTION", "AUTHORIZATION", "SUPPORTING_DOC", "OTHER"
  
  // สถานะ
  isActive        Boolean     @default(true)
  
  // Audit fields
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
  
  @@index([requisitionId])
  @@index([uploadedBy])
  @@map("requisition_attachments")
}

model RequisitionTemplate {
  id              String      @id @default(uuid())
  
  // ความสัมพันธ์
  hospitalId      String
  hospital        Hospital    @relation(fields: [hospitalId], references: [id], onDelete: Cascade)
  departmentId    String
  department      Department  @relation(fields: [departmentId], references: [id], onDelete: Cascade)
  createdBy       String
  creator         User        @relation(fields: [createdBy], references: [id], onDelete: Restrict)
  
  // ข้อมูลเทมเพลต
  templateName    String
  description     String?
  
  // การตั้งค่า
  type            RequisitionType
  priority        RequisitionPriority @default(NORMAL)
  isRecurring     Boolean     @default(false)
  recurringPattern String?    // "DAILY", "WEEKLY", "MONTHLY", "CUSTOM"
  
  // รายการยา (JSON)
  items           Json        // array of {drugId, requestedQty, notes}
  
  // สถานะ
  isActive        Boolean     @default(true)
  
  // การใช้งาน
  usageCount      Int         @default(0)
  lastUsedAt      DateTime?
  
  // Audit fields
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
  
  @@index([hospitalId])
  @@index([departmentId])
  @@index([createdBy])
  @@map("requisition_templates")
}

// ==========================================
// SUPPLIERS
// ==========================================

// prisma/schemas/suppliers.prisma
// Supplier Management Schema
// ระบบจัดการซัพพลายเออร์และการจัดซื้อสำหรับ Hospital Pharmacy System

enum SupplierStatus {
  PENDING     // รอการอนุมัติ
  ACTIVE      // ใช้งานได้
  SUSPENDED   // ระงับการใช้งาน
  INACTIVE    // ปิดการใช้งาน
  BLACKLISTED // อยู่ในบัญชีดำ
}

enum SupplierType {
  PHARMACEUTICAL  // บริษัทยา
  MEDICAL_DEVICE  // อุปกรณ์การแพทย์
  CONSUMABLE     // วัสดุสิ้นเปลือง
  LABORATORY     // เครื่องมือห้องปฏิบัติการ
  OTHER          // อื่นๆ
}

model Supplier {
  id              String          @id @default(uuid())
  
  // ข้อมูลซัพพลายเออร์
  supplierCode    String          @unique // รหัสซัพพลายเออร์
  name            String
  nameEn          String?         // ชื่อภาษาอังกฤษ
  
  // ประเภทและสถานะ
  type            SupplierType
  status          SupplierStatus  @default(ACTIVE)
  
  // ข้อมูลการจดทะเบียน
  taxId           String?         // เลขประจำตัวผู้เสียภาษี
  registrationNo  String?         // เลขที่จดทะเบียน
  licenseNo       String?         // เลขที่ใบอนุญาต
  licenseExpiry   DateTime?       // วันหมดอายุใบอนุญาต
  
  // ที่อยู่
  address         String
  district        String?         // ตำบล/แขวง
  subDistrict     String?         // อำเภอ/เขต
  province        String
  postalCode      String?
  country         String          @default("Thailand")
  
  // ข้อมูลติดต่อ
  phone           String?
  fax             String?
  email           String?
  website         String?
  
  // ข้อมูลทางการเงิน
  paymentTerms    String?         // เงื่อนไขการชำระเงิน (30 days, COD, etc.)
  creditLimit     Decimal?        // วงเงินเครดิต
  currency        String          @default("THB")
  
  // การประเมิน
  rating          Decimal?        // คะแนนประเมิน (1-5)
  qualityScore    Decimal?        // คะแนนคุณภาพ
  deliveryScore   Decimal?        // คะแนนการส่งมอบ
  serviceScore    Decimal?        // คะแนนบริการ
  
  // หมายเหตุ
  notes           String?
  internalNotes   String?         // หมายเหตุภายใน
  
  // การติดตาม
  lastOrderDate   DateTime?       // วันที่สั่งซื้อล่าสุด
  totalOrders     Int             @default(0)
  totalValue      Decimal         @default(0)
  
  // Audit fields
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @updatedAt
  
  // ================================
  // RELATIONS (Fixed opposite fields)
  // ================================
  contacts        SupplierContact[]
  products        SupplierProduct[]
  purchaseOrders  PurchaseOrder[]
  goodsReceipts   GoodsReceipt[]  // Fixed: เพิ่ม relation กลับ
  evaluations     SupplierEvaluation[]
  
  @@index([supplierCode])
  @@index([status])
  @@index([type])
  @@map("suppliers")
}

model SupplierContact {
  id          String      @id @default(uuid())
  
  // ความสัมพันธ์
  supplierId  String
  supplier    Supplier    @relation(fields: [supplierId], references: [id], onDelete: Cascade)
  
  // ข้อมูลผู้ติดต่อ
  name        String
  position    String?     // ตำแหน่ง
  department  String?     // แผนก
  
  // ข้อมูลติดต่อ
  phone       String?
  mobile      String?
  email       String?
  fax         String?
  
  // ประเภทการติดต่อ
  contactType String      // "PRIMARY", "SECONDARY", "SALES", "TECHNICAL", "BILLING", "EMERGENCY"
  isPrimary   Boolean     @default(false)
  
  // สถานะ
  isActive    Boolean     @default(true)
  
  // การติดตาม
  lastContactDate DateTime?
  
  // หมายเหตุ
  notes       String?
  
  // Audit fields
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  
  @@index([supplierId])
  @@map("supplier_contacts")
}

model SupplierProduct {
  id              String      @id @default(uuid())
  
  // ความสัมพันธ์
  supplierId      String
  supplier        Supplier    @relation(fields: [supplierId], references: [id], onDelete: Cascade)
  drugId          String
  drug            Drug        @relation(fields: [drugId], references: [id], onDelete: Cascade)
  
  // รหัสสินค้าของซัพพลายเออร์
  supplierProductCode String?
  supplierBarcode String?
  
  // ราคาและเงื่อนไข
  unitPrice       Decimal
  unitOfMeasure   String      // หน่วยนับ
  packSize        Int?        // ขนาดแพ็ค
  minimumOrderQty Int?        // จำนวนสั่งซื้อขั้นต่ำ
  
  // เวลาจัดส่ง
  leadTimeDays    Int?        // ระยะเวลาส่งมอบ (วัน)
  availability    String?     // สถานะความพร้อม
  
  // ข้อมูลผลิตภัณฑ์
  manufacturerLot String?     // รหัส lot ของผู้ผลิต
  expiryPeriod    Int?        // อายุการเก็บ (เดือน)
  storageCondition String?    // เงื่อนไขการเก็บ
  
  // สถานะ
  isPreferred     Boolean     @default(false) // ซัพพลายเออร์หลัก
  isActive        Boolean     @default(true)
  
  // การติดตาม
  lastOrderDate   DateTime?
  lastPurchasePrice Decimal?
  
  // Audit fields
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
  
  @@unique([supplierId, drugId])
  @@index([supplierId])
  @@index([drugId])
  @@map("supplier_products")
}

enum PurchaseOrderStatus {
  DRAFT           // ร่าง
  SUBMITTED       // ส่งแล้ว
  CONFIRMED       // ยืนยันแล้ว
  PARTIALLY_RECEIVED // รับบางส่วน
  COMPLETED       // เสร็จสิ้น
  CANCELLED       // ยกเลิก
  ON_HOLD         // พักการดำเนินการ
}

model PurchaseOrder {
  id              String              @id @default(uuid())
  
  // ความสัมพันธ์
  hospitalId      String
  hospital        Hospital            @relation(fields: [hospitalId], references: [id], onDelete: Cascade)
  supplierId      String
  supplier        Supplier            @relation(fields: [supplierId], references: [id], onDelete: Cascade)
  
  // หมายเลขใบสั่งซื้อ
  poNumber        String              @unique
  supplierRef     String?             // เลขที่อ้างอิงของซัพพลายเออร์
  
  // สถานะ
  status          PurchaseOrderStatus @default(DRAFT)
  
  // วันที่สำคัญ
  orderDate       DateTime            @default(now())
  requiredDate    DateTime            // วันที่ต้องการรับ
  expectedDate    DateTime?           // วันที่คาดว่าจะได้รับ
  confirmedDate   DateTime?           // วันที่ยืนยัน
  
  // มูลค่า
  subtotal        Decimal             @default(0)
  discountAmount  Decimal             @default(0)
  taxAmount       Decimal             @default(0)
  totalAmount     Decimal             @default(0)
  
  // ผู้รับผิดชอบ
  orderedBy       String
  orderer         User                @relation("POOrderer", fields: [orderedBy], references: [id], onDelete: Restrict)
  approvedBy      String?
  approver        User?               @relation("POApprover", fields: [approvedBy], references: [id], onDelete: Restrict)
  
  // เงื่อนไขการชำระเงิน
  paymentTerms    String?
  deliveryTerms   String?
  
  // หมายเหตุ
  notes           String?
  internalNotes   String?
  
  // Audit fields
  createdAt       DateTime            @default(now())
  updatedAt       DateTime            @updatedAt
  
  // Relations
  items           PurchaseOrderItem[]
  goodsReceipts   GoodsReceipt[]
  
  @@index([hospitalId, supplierId])
  @@index([orderDate])
  @@index([status])
  @@map("purchase_orders")
}

model PurchaseOrderItem {
  id              String        @id @default(uuid())
  
  // ความสัมพันธ์
  purchaseOrderId String
  purchaseOrder   PurchaseOrder @relation(fields: [purchaseOrderId], references: [id], onDelete: Cascade)
  drugId          String
  drug            Drug          @relation(fields: [drugId], references: [id], onDelete: Cascade)
  
  // รายละเอียดสินค้า
  description     String?       // รายละเอียดเพิ่มเติม
  specification   String?       // รายละเอียดทางเทคนิค
  
  // จำนวนและราคา
  quantity        Int
  unitPrice       Decimal
  discountPercent Decimal       @default(0)
  discountAmount  Decimal       @default(0)
  lineTotal       Decimal
  
  // การส่งมอบ
  requestedDate   DateTime?     // วันที่ต้องการ
  deliveredQty    Int           @default(0) // จำนวนที่ส่งแล้ว
  
  // สถานะ
  status          String        @default("PENDING") // "PENDING", "PARTIAL", "COMPLETED", "CANCELLED"
  
  // หมายเหตุ
  notes           String?
  
  // Audit fields
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
  
  // ================================
  // RELATIONS (Fixed opposite fields)
  // ================================
  goodsReceiptItems GoodsReceiptItem[] // Fixed: เพิ่ม relation กลับ
  
  @@index([purchaseOrderId])
  @@index([drugId])
  @@map("purchase_order_items")
}

enum ReceiptStatus {
  PENDING     // รอตรวจสอบ
  VERIFIED    // ตรวจสอบแล้ว
  APPROVED    // อนุมัติแล้ว
  REJECTED    // ปฏิเสธ
  CANCELLED   // ยกเลิก
}

model GoodsReceipt {
  id              String        @id @default(uuid())
  
  // ความสัมพันธ์
  hospitalId      String
  hospital        Hospital      @relation(fields: [hospitalId], references: [id], onDelete: Cascade)
  supplierId      String
  supplier        Supplier      @relation(fields: [supplierId], references: [id], onDelete: Cascade)
  purchaseOrderId String?
  purchaseOrder   PurchaseOrder? @relation(fields: [purchaseOrderId], references: [id], onDelete: SetNull)
  
  // หมายเลขเอกสาร
  receiptNumber   String        @unique
  supplierInvoice String?       // เลขที่ใบแจ้งหนี้ของซัพพลายเออร์
  deliveryNote    String?       // เลขที่ใบส่งของ
  
  // วันที่
  receivedDate    DateTime      @default(now())
  invoiceDate     DateTime?
  
  // สถานะ
  status          ReceiptStatus @default(PENDING)
  
  // ข้อมูลการรับ
  totalItems      Int           @default(0)
  totalAmount     Decimal       @default(0)
  
  // ผู้รับผิดชอบ
  receivedBy      String
  receiver        User          @relation("GRReceiver", fields: [receivedBy], references: [id], onDelete: Restrict)
  verifiedBy      String?
  verifier        User?         @relation("GRVerifier", fields: [verifiedBy], references: [id], onDelete: SetNull)
  
  // หมายเหตุ
  notes           String?
  discrepancyNotes String?      // หมายเหตุความผิดปกติ
  
  // Audit fields
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
  
  // Relations
  items           GoodsReceiptItem[]
  
  @@index([hospitalId, supplierId])
  @@index([receivedDate])
  @@index([status])
  @@map("goods_receipts")
}

model GoodsReceiptItem {
  id              String        @id @default(uuid())
  
  // ความสัมพันธ์
  goodsReceiptId  String
  goodsReceipt    GoodsReceipt  @relation(fields: [goodsReceiptId], references: [id], onDelete: Cascade)
  drugId          String
  drug            Drug          @relation(fields: [drugId], references: [id], onDelete: Cascade)
  purchaseOrderItemId String?
  purchaseOrderItem PurchaseOrderItem? @relation(fields: [purchaseOrderItemId], references: [id], onDelete: SetNull)
  
  // จำนวน
  orderedQty      Int?          // จำนวนที่สั่ง (จาก PO)
  receivedQty     Int           // จำนวนที่รับจริง
  acceptedQty     Int           // จำนวนที่ยอมรับ
  rejectedQty     Int           @default(0) // จำนวนที่ปฏิเสธ
  
  // ข้อมูล batch
  batchNumber     String
  manufacturingDate DateTime?
  expiryDate      DateTime
  
  // ราคา
  unitCost        Decimal
  totalCost       Decimal
  
  // เหตุผลการปฏิเสธ
  rejectionReason String?
  
  // การตรวจสอบคุณภาพ
  qcStatus        String?       // "PENDING", "PASSED", "FAILED"
  qcNotes         String?
  
  // หมายเหตุ
  notes           String?
  
  // Audit fields
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
  
  @@index([goodsReceiptId])
  @@index([drugId])
  @@map("goods_receipt_items")
}

model SupplierEvaluation {
  id              String      @id @default(uuid())
  
  // ความสัมพันธ์
  supplierId      String
  supplier        Supplier    @relation(fields: [supplierId], references: [id], onDelete: Cascade)
  hospitalId      String
  hospital        Hospital    @relation(fields: [hospitalId], references: [id], onDelete: Cascade)
  evaluatedBy     String
  evaluator       User        @relation(fields: [evaluatedBy], references: [id], onDelete: Restrict)
  
  // ระยะเวลาการประเมิน
  periodStart     DateTime
  periodEnd       DateTime
  
  // คะแนนประเมิน (1-5)
  qualityScore    Decimal     // คุณภาพสินค้า
  deliveryScore   Decimal     // การส่งมอบตรงเวลา
  serviceScore    Decimal     // คุณภาพบริการ
  priceScore      Decimal     // ความเหมาะสมของราคา
  responseScore   Decimal     // การตอบสนอง
  overallScore    Decimal     // คะแนนรวม
  
  // ความคิดเห็น
  strengths       String?     // จุดแข็ง
  weaknesses      String?     // จุดอ่อน
  recommendations String?     // ข้อเสนอแนะ
  
  // การดำเนินการ
  actionRequired  Boolean     @default(false)
  followUpDate    DateTime?
  
  // สถานะ
  status          String      @default("DRAFT") // "DRAFT", "SUBMITTED", "APPROVED"
  
  // Audit fields
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
  
  @@index([supplierId])
  @@index([hospitalId])
  @@index([periodStart, periodEnd])
  @@map("supplier_evaluations")
}

// ==========================================
// ANALYTICS
// ==========================================

// prisma/schemas/analytics.prisma
// Analytics and Reporting Schema
// ระบบการวิเคราะห์และรายงานสำหรับ Hospital Pharmacy System

model Report {
  id              String      @id @default(uuid())
  
  // ความสัมพันธ์
  hospitalId      String
  hospital        Hospital    @relation(fields: [hospitalId], references: [id], onDelete: Cascade)
  requestedBy     String
  requester       User        @relation(fields: [requestedBy], references: [id], onDelete: Restrict)
  
  // ข้อมูลรายงาน
  title           String
  description     String?
  reportType      String      // "STOCK", "REQUISITION", "SUPPLIER", "COMPLIANCE", etc.
  
  // พารามิเตอร์
  parameters      Json?       // พารามิเตอร์การสร้างรายงาน
  filterCriteria  Json?       // เงื่อนไขการกรอง
  
  // การสร้าง
  status          String      @default("PENDING") // "PENDING", "GENERATING", "COMPLETED", "FAILED"
  generatedAt     DateTime?   // เวลาที่สร้างเสร็จ
  filePath        String?     // path ของไฟล์รายงาน
  fileSize        Int?        // ขนาดไฟล์ (bytes)
  
  // การดาวน์โหลด
  downloadCount   Int         @default(0)
  lastDownloaded  DateTime?
  
  // Audit fields
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
  
  @@index([hospitalId])
  @@index([requestedBy])
  @@index([reportType])
  @@index([status])
  @@map("reports")
}

model Dashboard {
  id              String      @id @default(uuid())
  
  // ความสัมพันธ์
  hospitalId      String
  hospital        Hospital    @relation(fields: [hospitalId], references: [id], onDelete: Cascade)
  userId          String
  user            User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  // ข้อมูล dashboard
  name            String
  description     String?
  layout          Json        // การจัดวาง widgets
  widgets         Json        // รายการ widgets และการตั้งค่า
  
  // การใช้งาน
  isDefault       Boolean     @default(false) // dashboard เริ่มต้น
  isPublic        Boolean     @default(false) // แชร์ให้ผู้อื่นใช้ได้
  viewCount       Int         @default(0)
  lastViewedAt    DateTime?
  
  // Audit fields
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
  
  @@index([hospitalId])
  @@index([userId])
  @@map("dashboards")
}

model SystemUsage {
  id              String      @id @default(uuid())
  
  // ความสัมพันธ์
  hospitalId      String
  hospital        Hospital    @relation(fields: [hospitalId], references: [id], onDelete: Cascade)
  userId          String?
  user            User?       @relation(fields: [userId], references: [id], onDelete: SetNull)
  
  // ข้อมูลการใช้งาน
  feature         String      // ฟีเจอร์ที่ใช้
  action          String      // การกระทำ
  sessionId       String?     // session ID
  
  // เวลา
  startTime       DateTime    @default(now())
  endTime         DateTime?
  duration        Int?        // ระยะเวลา (มิลลิวินาที)
  
  // ข้อมูลเทคนิค
  ipAddress       String?
  userAgent       String?
  platform        String?     // "web", "mobile", "desktop"
  
  // เมตริก
  clicks          Int         @default(0)
  pageViews       Int         @default(0)
  dataTransferred Int         @default(0) // bytes
  
  @@index([hospitalId])
  @@index([userId])
  @@index([feature])
  @@index([startTime])
  @@map("system_usage")
}

// ==========================================
// AUDIT
// ==========================================

// prisma/schemas/audit.prisma
// Audit and Compliance Management Schema
// ระบบจัดการการตรวจสอบและการปฏิบัติตามกฎระเบียบ

enum AuditAction {
  CREATE          // สร้าง
  READ            // อ่าน
  UPDATE          // แก้ไข
  DELETE          // ลบ
  LOGIN           // เข้าสู่ระบบ
  LOGOUT          // ออกจากระบบ
  APPROVE         // อนุมัติ
  REJECT          // ปฏิเสธ
  TRANSFER        // โอน
  RECEIVE         // รับ
  DISPENSE        // จ่าย
  ADJUST          // ปรับปรุง
  EXPORT          // ส่งออกข้อมูล
  IMPORT          // นำเข้าข้อมูล
  PRINT           // พิมพ์
  EMAIL           // ส่งอีเมล
}

model AuditLog {
  id              String      @id @default(uuid())
  
  // ความสัมพันธ์
  hospitalId      String
  hospital        Hospital    @relation(fields: [hospitalId], references: [id], onDelete: Cascade)
  userId          String?
  user            User?       @relation(fields: [userId], references: [id], onDelete: SetNull)
  
  // การดำเนินการ
  action          AuditAction
  entityType      String      // ประเภทข้อมูล (User, Drug, StockCard, etc.)
  entityId        String?     // ID ของข้อมูล
  
  // รายละเอียด
  description     String
  oldValues       Json?       // ค่าเดิม (สำหรับ UPDATE, DELETE)
  newValues       Json?       // ค่าใหม่ (สำหรับ CREATE, UPDATE)
  
  // การติดตาม
  ipAddress       String?
  userAgent       String?
  sessionId       String?
  
  // ข้อมูลเพิ่มเติม
  severity        String      @default("INFO") // "LOW", "INFO", "WARNING", "ERROR", "CRITICAL"
  category        String?     // หมวดหมู่การตรวจสอบ
  tags            String[]    // แท็กสำหรับการจัดกลุ่ม
  
  // การเก็บรักษา
  retentionDate   DateTime?   // วันที่สามารถลบได้
  isArchived      Boolean     @default(false)
  
  // Audit fields
  timestamp       DateTime    @default(now())
  
  @@index([hospitalId, userId])
  @@index([action])
  @@index([entityType])
  @@index([timestamp])
  @@index([severity])
  @@map("audit_logs")
}

model DataAccessLog {
  id              String      @id @default(uuid())
  
  // ความสัมพันธ์
  hospitalId      String
  hospital        Hospital    @relation(fields: [hospitalId], references: [id], onDelete: Cascade)
  userId          String
  user            User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  // การเข้าถึงข้อมูล
  resourceType    String      // ประเภทข้อมูล
  resourceId      String?     // ID ของข้อมูล
  operation       String      // การดำเนินการ (READ, SEARCH, EXPORT, etc.)
  
  // ผลลัพธ์
  success         Boolean
  errorMessage    String?
  recordCount     Int?        // จำนวนข้อมูลที่เข้าถึง
  
  // การติดตาม
  ipAddress       String?
  userAgent       String?
  requestPath     String?     // API path
  queryParams     Json?       // query parameters
  
  // การวิเคราะห์
  responseTime    Int?        // เวลาตอบสนอง (ms)
  dataSize        Int?        // ขนาดข้อมูล (bytes)
  
  // ความปลอดภัย
  riskLevel       String      @default("LOW") // "LOW", "MEDIUM", "HIGH", "CRITICAL"
  sensitiveData   Boolean     @default(false) // มีข้อมูลที่ละเอียดอ่อนหรือไม่
  
  // Audit fields
  timestamp       DateTime    @default(now())
  
  @@index([hospitalId, userId])
  @@index([resourceType])
  @@index([timestamp])
  @@index([success])
  @@index([riskLevel])
  @@map("data_access_logs")
}

enum ComplianceType {
  REGULATORY      // กฎระเบียบของรัฐ
  INTERNAL        // นโยบายภายใน
  QUALITY         // มาตรฐานคุณภาพ
  SAFETY          // ความปลอดภัย
  FINANCIAL       // ด้านการเงิน
  PRIVACY         // ความเป็นส่วนตัว
  SECURITY        // ความปลอดภัยข้อมูล
}

enum ComplianceStatus {
  COMPLIANT       // ปฏิบัติตาม
  NON_COMPLIANT   // ไม่ปฏิบัติตาม
  PARTIAL         // ปฏิบัติตามบางส่วน
  PENDING         // รอการตรวจสอบ
  UNDER_REVIEW    // อยู่ระหว่างทบทวน
}

model ComplianceCheck {
  id              String          @id @default(uuid())
  
  // ความสัมพันธ์
  hospitalId      String
  hospital        Hospital        @relation(fields: [hospitalId], references: [id], onDelete: Cascade)
  checkedBy       String
  checker         User            @relation("ComplianceChecker", fields: [checkedBy], references: [id], onDelete: Restrict)
  reviewedBy      String?
  reviewer        User?           @relation("ComplianceReviewer", fields: [reviewedBy], references: [id], onDelete: Restrict)
  
  // รายละเอียดการตรวจสอบ
  checkType       ComplianceType
  title           String
  description     String
  requirements    String          // ข้อกำหนดที่ต้องปฏิบัติ
  
  // ผลการตรวจสอบ
  status          ComplianceStatus
  findings        String?         // ข้อค้นพบ
  recommendations String?         // ข้อเสนอแนะ
  
  // การดำเนินการ
  actionRequired  Boolean         @default(false)
  actionPlan      String?         // แผนการดำเนินการ
  dueDate         DateTime?       // กำหนดการดำเนินการ
  completedDate   DateTime?       // วันที่ดำเนินการเสร็จ
  
  // การให้คะแนน
  riskLevel       String          @default("LOW") // "LOW", "MEDIUM", "HIGH", "CRITICAL"
  complianceScore Decimal?        // คะแนนการปฏิบัติตาม (0-100)
  
  // การติดตาม
  nextCheckDate   DateTime?       // วันที่ตรวจสอบครั้งต่อไป
  frequency       String?         // ความถี่การตรวจสอบ
  
  // เอกสาร
  evidenceFiles   Json?           // ไฟล์หลักฐาน
  reportFile      String?         // ไฟล์รายงาน
  
  // Audit fields
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @updatedAt
  
  @@index([hospitalId])
  @@index([checkedBy])
  @@index([checkType])
  @@index([status])
  @@index([riskLevel])
  @@map("compliance_checks")
}

enum SubstanceAction {
  RECEIVE         // รับเข้า
  DISPENSE        // จ่าย
  TRANSFER        // โอน
  RETURN          // ส่งคืน
  DISPOSE         // ทำลาย
  COUNT           // นับสต็อก
  ADJUST          // ปรับปรุง
  WASTE           // ของเสีย
}

model ControlledSubstanceLog {
  id              String          @id @default(uuid())
  
  // ความสัมพันธ์
  hospitalId      String
  hospital        Hospital        @relation(fields: [hospitalId], references: [id], onDelete: Cascade)
  drugId          String
  drug            Drug            @relation(fields: [drugId], references: [id], onDelete: Cascade)
  
  // ผู้รับผิดชอบ
  handledBy       String
  handler         User            @relation("CSLHandler", fields: [handledBy], references: [id], onDelete: Restrict)
  witnessedBy     String?
  witness         User?           @relation("CSLWitness", fields: [witnessedBy], references: [id], onDelete: Restrict)
  authorizedBy    String?
  authorizer      User?           @relation("CSLAuthorizer", fields: [authorizedBy], references: [id], onDelete: Restrict)
  
  // การดำเนินการ
  action          SubstanceAction
  quantity        Int
  unit            String
  
  // ข้อมูล batch
  batchNumber     String?
  expiryDate      DateTime?
  
  // การอ้างอิง
  referenceType   String?         // "PRESCRIPTION", "REQUISITION", "TRANSFER", "DISPOSAL"
  referenceId     String?         // ID ของเอกสารอ้างอิง
  referenceNumber String?         // หมายเลขเอกสารอ้างอิง
  
  // สถานที่
  fromLocation    String?         // สถานที่ต้นทาง
  toLocation      String?         // สถานที่ปลายทาง
  
  // ผู้ป่วย (สำหรับการจ่ายยา)
  patientId       String?         // รหัสผู้ป่วย
  patientName     String?         // ชื่อผู้ป่วย (encrypted)
  
  // ข้อมูลเพิ่มเติม
  reason          String?         // เหตุผล
  notes           String?         // หมายเหตุ
  
  // การตรวจสอบ
  requiresWitness Boolean         @default(true)
  requiresAuth    Boolean         @default(false)
  
  // Audit fields
  timestamp       DateTime        @default(now())
  createdAt       DateTime        @default(now())
  
  @@index([hospitalId, drugId])
  @@index([handledBy])
  @@index([action])
  @@index([timestamp])
  @@map("controlled_substance_logs")
}

model InternalAudit {
  id              String      @id @default(uuid())
  
  // ความสัมพันธ์
  hospitalId      String
  hospital        Hospital    @relation(fields: [hospitalId], references: [id], onDelete: Cascade)
  auditedBy       String
  auditor         User        @relation(fields: [auditedBy], references: [id], onDelete: Restrict)
  
  // รายละเอียดการตรวจสอบ
  auditTitle      String
  auditScope      String      // ขอบเขตการตรวจสอบ
  auditPeriod     String      // ช่วงเวลาที่ตรวจสอบ
  
  // กำหนดการ
  plannedDate     DateTime    // วันที่วางแผน
  startDate       DateTime?   // วันที่เริ่มตรวจสอบ
  endDate         DateTime?   // วันที่สิ้นสุด
  
  // ผลการตรวจสอบ
  status          String      @default("PLANNED") // "PLANNED", "IN_PROGRESS", "COMPLETED", "CANCELLED"
  overallRating   String?     // "EXCELLENT", "GOOD", "SATISFACTORY", "NEEDS_IMPROVEMENT", "UNSATISFACTORY"
  
  // สรุปผล
  keyFindings     String?     // ข้อค้นพบสำคัญ
  recommendations String?     // ข้อเสนอแนะ
  actionItems     Json?       // รายการที่ต้องดำเนินการ
  
  // การติดตาม
  followUpDate    DateTime?   // วันที่ติดตามผล
  isFollowUp      Boolean     @default(false)
  parentAuditId   String?     // การตรวจสอบที่เกี่ยวข้อง
  
  // เอกสาร
  reportFile      String?     // ไฟล์รายงาน
  attachments     Json?       // ไฟล์แนบอื่นๆ
  
  // Audit fields
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
  
  @@index([hospitalId])
  @@index([auditedBy])
  @@index([status])
  @@index([plannedDate])
  @@map("internal_audits")
}

enum IncidentType {
  SECURITY_BREACH         // การรั่วไหลของข้อมูล
  UNAUTHORIZED_ACCESS     // การเข้าถึงโดยไม่ได้รับอนุญาต
  DATA_CORRUPTION        // ข้อมูลเสียหาย
  SYSTEM_FAILURE         // ระบบล่ม
  POLICY_VIOLATION       // การละเมิดนโยบาย
  SUSPICIOUS_ACTIVITY    // กิจกรรมน่าสงสัย
  MEDICATION_ERROR       // ข้อผิดพลาดเรื่องยา
  INVENTORY_DISCREPANCY  // ความผิดปกติของสต็อก
  OTHER                  // อื่นๆ
}

enum IncidentSeverity {
  LOW                    // ต่ำ
  MEDIUM                 // ปานกลาง
  HIGH                   // สูง
  CRITICAL               // วิกฤต
}

enum IncidentStatus {
  REPORTED               // รายงานแล้ว
  UNDER_INVESTIGATION    // อยู่ระหว่างสอบสวน
  RESOLVED               // แก้ไขแล้ว
  CLOSED                 // ปิดเคส
  ESCALATED              // ขยายเรื่อง
}

model SecurityIncident {
  id              String          @id @default(uuid())
  
  // ความสัมพันธ์
  hospitalId      String
  hospital        Hospital        @relation(fields: [hospitalId], references: [id], onDelete: Cascade)
  reportedBy      String
  reporter        User            @relation("SecurityReporter", fields: [reportedBy], references: [id], onDelete: Restrict)
  suspectedUserId String?         // ผู้ต้องสงสัย
  suspectedUser   User?           @relation("SuspectedUser", fields: [suspectedUserId], references: [id], onDelete: Restrict)
  investigatedBy  String?
  investigator    User?           @relation("Investigator", fields: [investigatedBy], references: [id], onDelete: Restrict)
  
  // รายละเอียดเหตุการณ์
  incidentType    IncidentType
  severity        IncidentSeverity
  status          IncidentStatus  @default(REPORTED)
  
  // รายละเอียด
  title           String
  description     String
  affectedSystems String?         // ระบบที่ได้รับผลกระทบ
  affectedData    String?         // ข้อมูลที่ได้รับผลกระทบ
  
  // การติดตาม
  detectedAt      DateTime        // เวลาที่พบเหตุการณ์
  reportedAt      DateTime        @default(now())
  investigatedAt  DateTime?       // เวลาที่เริ่มสอบสวน
  resolvedAt      DateTime?       // เวลาที่แก้ไข
  
  // การวิเคราะห์
  rootCause       String?         // สาเหตุหลัก
  impact          String?         // ผลกระทบ
  riskAssessment  String?         // การประเมินความเสี่ยง
  
  // การดำเนินการ
  immediateActions String?        // การดำเนินการเฉพาะหน้า
  correctiveActions String?       // การดำเนินการแก้ไข
  preventiveActions String?       // การป้องกันในอนาคต
  
  // การติดตาม
  isExternal      Boolean         @default(false) // เกี่ยวข้องกับบุคคลภายนอก
  requiresReporting Boolean       @default(false) // ต้องรายงานต่อหน่วยงาน
  reportedToAuth  Boolean         @default(false) // รายงานแล้ว
  
  // เอกสาร
  evidenceFiles   Json?           // ไฟล์หลักฐาน
  reportFile      String?         // ไฟล์รายงาน
  
  // การประเมินผลกระทบ
  financialImpact Decimal?        // ผลกระทบทางการเงิน
  operationalImpact String?       // ผลกระทบต่อการดำเนินงาน
  reputationalImpact String?      // ผลกระทบต่อชื่อเสียง
  
  // การติดตามผล
  lessonsLearned  String?         // บทเรียนที่ได้รับ
  improvementsImplemented String? // การปรับปรุงที่ดำเนินการ
  
  // การอ้างอิง
  relatedIncidents Json?          // เหตุการณ์ที่เกี่ยวข้อง
  externalReferences Json?        // การอ้างอิงภายนอก
  
  // Audit fields
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @updatedAt
  
  @@index([hospitalId])
  @@index([reportedBy])
  @@index([incidentType])
  @@index([severity])
  @@index([status])
  @@index([detectedAt])
  @@map("security_incidents")
}

// ==========================================
// NOTIFICATIONS
// ==========================================

// prisma/schemas/notifications.prisma
// Notification Management Schema
// ระบบจัดการการแจ้งเตือนสำหรับ Hospital Pharmacy System

enum NotificationType {
  STOCK_LOW           // สต็อกต่ำ
  STOCK_OUT           // สต็อกหมด
  STOCK_EXPIRED       // ยาหมดอายุ
  STOCK_EXPIRING      // ยาใกล้หมดอายุ
  REQUISITION_PENDING // ใบเบิกรอดำเนินการ
  REQUISITION_APPROVED // ใบเบิกอนุมัติแล้ว
  REQUISITION_REJECTED // ใบเบิกปฏิเสธ
  PO_CREATED          // สร้าง PO แล้ว
  PO_APPROVED         // PO อนุมัติแล้ว
  GOODS_RECEIVED      // รับของแล้ว
  COMPLIANCE_ALERT    // การแจ้งเตือนการปฏิบัติตาม
  SECURITY_ALERT      // การแจ้งเตือนความปลอดภัย
  SYSTEM_MAINTENANCE  // บำรุงรักษาระบบ
  USER_CREATED        // สร้างผู้ใช้ใหม่
  PASSWORD_RESET      // รีเซ็ตรหัสผ่าน
}

enum NotificationPriority {
  LOW                 // ต่ำ
  NORMAL              // ปกติ
  HIGH                // สูง
  URGENT              // เร่งด่วน
}

enum NotificationStatus {
  PENDING             // รอส่ง
  SENT                // ส่งแล้ว
  DELIVERED           // ส่งถึงแล้ว
  READ                // อ่านแล้ว
  FAILED              // ส่งไม่สำเร็จ
}

model Notification {
  id              String              @id @default(uuid())
  
  // ความสัมพันธ์
  hospitalId      String
  hospital        Hospital            @relation(fields: [hospitalId], references: [id], onDelete: Cascade)
  
  // ข้อมูลการแจ้งเตือน
  type            NotificationType
  priority        NotificationPriority @default(NORMAL)
  title           String
  message         String
  
  // การอ้างอิง
  referenceType   String?             // "DRUG", "REQUISITION", "PURCHASE_ORDER", etc.
  referenceId     String?             // ID ของข้อมูลที่อ้างอิง
  
  // การกำหนดเป้าหมาย
  targetRoles     String[]            // บทบาทเป้าหมาย
  targetUsers     Json?               // ผู้ใช้เฉพาะ (array of user IDs)
  targetDepartments Json?             // แผนกเป้าหมาย (array of department IDs)
  
  // การส่ง
  sendEmail       Boolean             @default(false)
  sendSMS         Boolean             @default(false)
  sendPush        Boolean             @default(true)
  sendInApp       Boolean             @default(true)
  
  // กำหนดการ
  scheduledAt     DateTime?           // เวลาที่กำหนดส่ง
  sentAt          DateTime?           // เวลาที่ส่งจริง
  expiresAt       DateTime?           // เวลาหมดอายุ
  
  // สถานะ
  status          NotificationStatus  @default(PENDING)
  
  // การติดตาม
  totalRecipients Int                 @default(0)
  readCount       Int                 @default(0)
  clickCount      Int                 @default(0)
  
  // ข้อมูลเพิ่มเติม
  metadata        Json?               // ข้อมูลเพิ่มเติม
  actionUrl       String?             // URL สำหรับการกระทำ
  
  // Audit fields
  createdAt       DateTime            @default(now())
  updatedAt       DateTime            @updatedAt
  
  // Relations
  users           NotificationUser[]
  
  @@index([hospitalId])
  @@index([type])
  @@index([priority])
  @@index([status])
  @@index([scheduledAt])
  @@map("notifications")
}

model NotificationUser {
  id              String              @id @default(uuid())
  
  // ความสัมพันธ์
  notificationId  String
  notification    Notification        @relation(fields: [notificationId], references: [id], onDelete: Cascade)
  userId          String
  user            User                @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  // สถานะการส่ง
  emailSent       Boolean             @default(false)
  smsSent         Boolean             @default(false)
  pushSent        Boolean             @default(false)
  inAppSent       Boolean             @default(false)
  
  // การอ่าน
  isRead          Boolean             @default(false)
  readAt          DateTime?
  
  // การกระทำ
  isClicked       Boolean             @default(false)
  clickedAt       DateTime?
  
  // การส่ง
  deliveredAt     DateTime?
  failedAt        DateTime?
  failureReason   String?
  
  @@unique([notificationId, userId])
  @@index([userId])
  @@index([isRead])
  @@map("notification_users")
}

model NotificationPreference {
  id              String      @id @default(uuid())
  
  // ความสัมพันธ์
  userId          String
  user            User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  // ประเภทการแจ้งเตือน
  notificationType NotificationType
  
  // ช่องทางการแจ้งเตือน
  enableEmail     Boolean     @default(true)
  enableSMS       Boolean     @default(false)
  enablePush      Boolean     @default(true)
  enableInApp     Boolean     @default(true)
  
  // เวลาการแจ้งเตือน
  quietHoursStart String?     // เวลาเริ่มช่วงเงียบ (HH:mm)
  quietHoursEnd   String?     // เวลาสิ้นสุดช่วงเงียบ (HH:mm)
  weekendEnabled  Boolean     @default(true)
  
  // การกรอง
  minimumPriority NotificationPriority @default(NORMAL)
  
  // Audit fields
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
  
  @@unique([userId, notificationType])
  @@index([userId])
  @@map("notification_preferences")
}

// ==========================================
// SHARED ENUMS
// ==========================================

// prisma/schemas/shared-enums.prisma
// Shared Enums Schema
// Enums ที่ใช้ร่วมกันในหลายโมดูล - ต้อง load ก่อนไฟล์อื่นทั้งหมด

// ระดับความสำคัญ - ใช้ในทุกระบบ
enum Priority {
  LOW             // ความสำคัญต่ำ
  NORMAL          // ความสำคัญปกติ
  HIGH            // ความสำคัญสูง
  URGENT          // เร่งด่วน
  CRITICAL        // วิกฤต
}

// สถานะการอนุมัติ - ใช้ในหลายระบบ
enum ApprovalStatus {
  PENDING         // รอการอนุมัติ
  APPROVED        // อนุมัติแล้ว
  REJECTED        // ปฏิเสธ
  CANCELLED       // ยกเลิก
  EXPIRED         // หมดเวลา
}

// สถานะการใช้งานทั่วไป
enum ActiveStatus {
  ACTIVE          // ใช้งานปกติ
  INACTIVE        // ไม่ใช้งานชั่วคราว
  SUSPENDED       // ระงับการใช้งาน
  DELETED         // ลบแล้ว (soft delete)
}

// สกุลเงิน
enum Currency {
  THB             // บาทไทย
  USD             // ดอลลาร์สหรัฐ
  EUR             // ยูโร
  JPY             // เยนญี่ปุ่น
}

// ช่วงเวลา - ใช้ในการรายงานและวิเคราะห์
enum TimePeriod {
  HOURLY          // รายชั่วโมง
  DAILY           // รายวัน
  WEEKLY          // รายสัปดาห์
  MONTHLY         // รายเดือน
  QUARTERLY       // รายไตรมาส
  YEARLY          // รายปี
}

// ประเภทเอกสาร
enum DocumentType {
  PDF             // ไฟล์ PDF
  EXCEL           // ไฟล์ Excel
  WORD            // ไฟล์ Word
  IMAGE           // รูปภาพ
  CSV             // ไฟล์ CSV
  JSON            // ไฟล์ JSON
  XML             // ไฟล์ XML
  OTHER           // อื่นๆ
}
