// prisma/seeds/master-data.seed.ts - Fixed Version
import { PrismaClient } from "@prisma/client";

export async function seedMasterData(prisma: PrismaClient, hospitals: any[], devUser: any) {
  console.log("üíä Creating Master Data for all hospitals...");

  const masterData: Record<string, any> = {};

  // ================================
  // DRUG FORMS
  // ================================
  console.log("üìã Creating Drug Forms...");
  const drugForms = [
    { formCode: "TAB", formName: "‡∏¢‡∏≤‡πÄ‡∏°‡πá‡∏î", formNameEn: "Tablet", category: "ORAL", description: "‡∏¢‡∏≤‡πÅ‡∏ö‡∏ö‡πÄ‡∏°‡πá‡∏î‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∞‡∏ó‡∏≤‡∏ô" },
    { formCode: "CAP", formName: "‡∏¢‡∏≤‡πÅ‡∏Ñ‡∏õ‡∏ã‡∏π‡∏•", formNameEn: "Capsule", category: "ORAL", description: "‡∏¢‡∏≤‡πÅ‡∏ö‡∏ö‡πÅ‡∏Ñ‡∏õ‡∏ã‡∏π‡∏•‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∞‡∏ó‡∏≤‡∏ô" },
    { formCode: "INJ", formName: "‡∏¢‡∏≤‡∏â‡∏µ‡∏î", formNameEn: "Injection", category: "INJECTION", description: "‡∏¢‡∏≤‡∏â‡∏µ‡∏î‡πÄ‡∏Ç‡πâ‡∏≤‡∏´‡∏•‡∏≠‡∏î‡πÄ‡∏•‡∏∑‡∏≠‡∏î ‡∏Å‡∏•‡πâ‡∏≤‡∏°‡πÄ‡∏ô‡∏∑‡πâ‡∏≠ ‡∏´‡∏£‡∏∑‡∏≠‡πÉ‡∏ï‡πâ‡∏ú‡∏¥‡∏ß‡∏´‡∏ô‡∏±‡∏á" },
    { formCode: "SYR", formName: "‡∏¢‡∏≤‡∏ô‡πâ‡∏≥", formNameEn: "Syrup", category: "ORAL", description: "‡∏¢‡∏≤‡∏ô‡πâ‡∏≥‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∞‡∏ó‡∏≤‡∏ô" },
    { formCode: "CRE", formName: "‡∏Ñ‡∏£‡∏µ‡∏°", formNameEn: "Cream", category: "TOPICAL", description: "‡∏Ñ‡∏£‡∏µ‡∏°‡∏ó‡∏≤‡∏†‡∏≤‡∏¢‡∏ô‡∏≠‡∏Å" },
    { formCode: "OIN", formName: "‡∏¢‡∏≤‡∏Ç‡∏µ‡πâ‡∏ú‡∏∂‡πâ‡∏á", formNameEn: "Ointment", category: "TOPICAL", description: "‡∏¢‡∏≤‡∏Ç‡∏µ‡πâ‡∏ú‡∏∂‡πâ‡∏á‡∏ó‡∏≤‡∏†‡∏≤‡∏¢‡∏ô‡∏≠‡∏Å" },
    { formCode: "DROP", formName: "‡∏¢‡∏≤‡∏´‡∏¢‡∏î", formNameEn: "Drops", category: "TOPICAL", description: "‡∏¢‡∏≤‡∏´‡∏¢‡∏î‡∏ï‡∏≤ ‡∏´‡∏π ‡∏´‡∏£‡∏∑‡∏≠‡∏à‡∏°‡∏π‡∏Å" },
    { formCode: "SUP", formName: "‡∏¢‡∏≤‡πÄ‡∏´‡∏ô‡πá‡∏ö", formNameEn: "Suppository", category: "RECTAL", description: "‡∏¢‡∏≤‡πÄ‡∏´‡∏ô‡πá‡∏ö‡∏ó‡∏≤‡∏á‡∏ó‡∏ß‡∏≤‡∏£‡∏´‡∏ô‡∏±‡∏Å" },
    { formCode: "PATCH", formName: "‡πÅ‡∏ú‡πà‡∏ô‡πÅ‡∏õ‡∏∞", formNameEn: "Patch", category: "TOPICAL", description: "‡πÅ‡∏ú‡πà‡∏ô‡πÅ‡∏õ‡∏∞‡∏ú‡∏¥‡∏ß‡∏´‡∏ô‡∏±‡∏á" },
    { formCode: "SPRAY", formName: "‡∏¢‡∏≤‡∏™‡πÄ‡∏õ‡∏£‡∏¢‡πå", formNameEn: "Spray", category: "TOPICAL", description: "‡∏¢‡∏≤‡∏û‡πà‡∏ô‡∏™‡πÄ‡∏õ‡∏£‡∏¢‡πå" }
  ];

  for (const hospital of hospitals) {
    for (const form of drugForms) {
      await prisma.drugForm.upsert({
        where: {
          hospitalId_formCode: {
            hospitalId: hospital.id,
            formCode: form.formCode
          }
        },
        update: {},
        create: {
          ...form,
          hospitalId: hospital.id,
          isSystemDefault: true,
          createdBy: devUser.id
        }
      });
    }
  }
  masterData.drugForms = drugForms;
  console.log(`‚úÖ Created ${drugForms.length} drug forms for ${hospitals.length} hospitals`);

  // ================================
  // DRUG GROUPS
  // ================================
  console.log("üß¨ Creating Drug Groups...");
  const drugGroups = [
    { groupCode: "ANTIBIOTIC", groupName: "‡∏¢‡∏≤‡∏õ‡∏è‡∏¥‡∏ä‡∏µ‡∏ß‡∏ô‡∏∞", groupNameTh: "‡∏¢‡∏≤‡∏õ‡∏è‡∏¥‡∏ä‡∏µ‡∏ß‡∏ô‡∏∞", description: "‡∏¢‡∏≤‡∏ï‡πâ‡∏≤‡∏ô‡πÄ‡∏ä‡∏∑‡πâ‡∏≠‡πÅ‡∏ö‡∏Ñ‡∏ó‡∏µ‡πÄ‡∏£‡∏µ‡∏¢" },
    { groupCode: "ANALGESIC", groupName: "‡∏¢‡∏≤‡πÅ‡∏Å‡πâ‡∏õ‡∏ß‡∏î", groupNameTh: "‡∏¢‡∏≤‡πÅ‡∏Å‡πâ‡∏õ‡∏ß‡∏î", description: "‡∏¢‡∏≤‡∏ö‡∏£‡∏£‡πÄ‡∏ó‡∏≤‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡∏õ‡∏ß‡∏î" },
    { groupCode: "ANTIPYRETIC", groupName: "‡∏¢‡∏≤‡∏•‡∏î‡πÑ‡∏Ç‡πâ", groupNameTh: "‡∏¢‡∏≤‡∏•‡∏î‡πÑ‡∏Ç‡πâ", description: "‡∏¢‡∏≤‡∏•‡∏î‡πÑ‡∏Ç‡πâ" },
    { groupCode: "ANTIHYPERTENSIVE", groupName: "‡∏¢‡∏≤‡∏•‡∏î‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡∏±‡∏ô‡πÇ‡∏•‡∏´‡∏¥‡∏ï", groupNameTh: "‡∏¢‡∏≤‡∏•‡∏î‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡∏±‡∏ô‡πÇ‡∏•‡∏´‡∏¥‡∏ï", description: "‡∏¢‡∏≤‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡∏±‡∏ô‡πÇ‡∏•‡∏´‡∏¥‡∏ï" },
    { groupCode: "ANTIDIABETIC", groupName: "‡∏¢‡∏≤‡πÄ‡∏ö‡∏≤‡∏´‡∏ß‡∏≤‡∏ô", groupNameTh: "‡∏¢‡∏≤‡πÄ‡∏ö‡∏≤‡∏´‡∏ß‡∏≤‡∏ô", description: "‡∏¢‡∏≤‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ô‡πâ‡∏≥‡∏ï‡∏≤‡∏•‡πÉ‡∏ô‡πÄ‡∏•‡∏∑‡∏≠‡∏î" },
    { groupCode: "ANTIHISTAMINE", groupName: "‡∏¢‡∏≤‡πÅ‡∏Å‡πâ‡πÅ‡∏û‡πâ", groupNameTh: "‡∏¢‡∏≤‡πÅ‡∏Å‡πâ‡πÅ‡∏û‡πâ", description: "‡∏¢‡∏≤‡∏ï‡πâ‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏û‡πâ" },
    { groupCode: "VITAMIN", groupName: "‡∏ß‡∏¥‡∏ï‡∏≤‡∏°‡∏¥‡∏ô", groupNameTh: "‡∏ß‡∏¥‡∏ï‡∏≤‡∏°‡∏¥‡∏ô", description: "‡∏ß‡∏¥‡∏ï‡∏≤‡∏°‡∏¥‡∏ô‡πÅ‡∏•‡∏∞‡∏™‡∏≤‡∏£‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡πÄ‡∏™‡∏£‡∏¥‡∏°" },
    { groupCode: "GASTROINTESTINAL", groupName: "‡∏¢‡∏≤‡∏ó‡∏≤‡∏á‡πÄ‡∏î‡∏¥‡∏ô‡∏≠‡∏≤‡∏´‡∏≤‡∏£", groupNameTh: "‡∏¢‡∏≤‡∏ó‡∏≤‡∏á‡πÄ‡∏î‡∏¥‡∏ô‡∏≠‡∏≤‡∏´‡∏≤‡∏£", description: "‡∏¢‡∏≤‡∏£‡∏±‡∏Å‡∏©‡∏≤‡πÇ‡∏£‡∏Ñ‡∏ó‡∏≤‡∏á‡πÄ‡∏î‡∏¥‡∏ô‡∏≠‡∏≤‡∏´‡∏≤‡∏£" },
    { groupCode: "RESPIRATORY", groupName: "‡∏¢‡∏≤‡∏ó‡∏≤‡∏á‡πÄ‡∏î‡∏¥‡∏ô‡∏´‡∏≤‡∏¢‡πÉ‡∏à", groupNameTh: "‡∏¢‡∏≤‡∏ó‡∏≤‡∏á‡πÄ‡∏î‡∏¥‡∏ô‡∏´‡∏≤‡∏¢‡πÉ‡∏à", description: "‡∏¢‡∏≤‡∏£‡∏±‡∏Å‡∏©‡∏≤‡πÇ‡∏£‡∏Ñ‡∏ó‡∏≤‡∏á‡πÄ‡∏î‡∏¥‡∏ô‡∏´‡∏≤‡∏¢‡πÉ‡∏à" },
    { groupCode: "CARDIOVASCULAR", groupName: "‡∏¢‡∏≤‡∏´‡∏±‡∏ß‡πÉ‡∏à‡πÅ‡∏•‡∏∞‡∏´‡∏•‡∏≠‡∏î‡πÄ‡∏•‡∏∑‡∏≠‡∏î", groupNameTh: "‡∏¢‡∏≤‡∏´‡∏±‡∏ß‡πÉ‡∏à‡πÅ‡∏•‡∏∞‡∏´‡∏•‡∏≠‡∏î‡πÄ‡∏•‡∏∑‡∏≠‡∏î", description: "‡∏¢‡∏≤‡∏£‡∏±‡∏Å‡∏©‡∏≤‡πÇ‡∏£‡∏Ñ‡∏´‡∏±‡∏ß‡πÉ‡∏à‡πÅ‡∏•‡∏∞‡∏´‡∏•‡∏≠‡∏î‡πÄ‡∏•‡∏∑‡∏≠‡∏î" },
    { groupCode: "CENTRAL_NERVOUS", groupName: "‡∏¢‡∏≤‡∏£‡∏∞‡∏ö‡∏ö‡∏õ‡∏£‡∏∞‡∏™‡∏≤‡∏ó‡∏Å‡∏•‡∏≤‡∏á", groupNameTh: "‡∏¢‡∏≤‡∏£‡∏∞‡∏ö‡∏ö‡∏õ‡∏£‡∏∞‡∏™‡∏≤‡∏ó‡∏Å‡∏•‡∏≤‡∏á", description: "‡∏¢‡∏≤‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏ú‡∏•‡∏ï‡πà‡∏≠‡∏£‡∏∞‡∏ö‡∏ö‡∏õ‡∏£‡∏∞‡∏™‡∏≤‡∏ó‡∏Å‡∏•‡∏≤‡∏á" },
    { groupCode: "TOPICAL", groupName: "‡∏¢‡∏≤‡πÉ‡∏ä‡πâ‡∏†‡∏≤‡∏¢‡∏ô‡∏≠‡∏Å", groupNameTh: "‡∏¢‡∏≤‡πÉ‡∏ä‡πâ‡∏†‡∏≤‡∏¢‡∏ô‡∏≠‡∏Å", description: "‡∏¢‡∏≤‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÉ‡∏ä‡πâ‡∏†‡∏≤‡∏¢‡∏ô‡∏≠‡∏Å" }
  ];

  for (const hospital of hospitals) {
    for (const group of drugGroups) {
      await prisma.drugGroup.upsert({
        where: {
          hospitalId_groupCode: {
            hospitalId: hospital.id,
            groupCode: group.groupCode
          }
        },
        update: {},
        create: {
          ...group,
          hospitalId: hospital.id,
          isSystemDefault: true,
          createdBy: devUser.id
        }
      });
    }
  }
  masterData.drugGroups = drugGroups;
  console.log(`‚úÖ Created ${drugGroups.length} drug groups for ${hospitals.length} hospitals`);

  // ================================
  // DRUG TYPES - ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ
  // ================================
  console.log("üè∑Ô∏è Creating Drug Types...");
  const drugTypes = [
    { 
      typeCode: "GENERIC", 
      typeName: "‡∏¢‡∏≤‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏≤‡∏°‡∏±‡∏ç", 
      typeNameTh: "‡∏¢‡∏≤‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏≤‡∏°‡∏±‡∏ç", // ‡πÅ‡∏Å‡πâ‡∏à‡∏≤‡∏Å typeNameEn ‡πÄ‡∏õ‡πá‡∏ô typeNameTh
      description: "‡∏¢‡∏≤‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏≤‡∏°‡∏±‡∏ç ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ñ‡∏π‡∏Å" 
    },
    { 
      typeCode: "BRAND", 
      typeName: "‡∏¢‡∏≤‡∏ï‡πâ‡∏ô‡∏ï‡∏≥‡∏£‡∏±‡∏ö", 
      typeNameTh: "‡∏¢‡∏≤‡∏ï‡πâ‡∏ô‡∏ï‡∏≥‡∏£‡∏±‡∏ö", 
      description: "‡∏¢‡∏≤‡∏ï‡πâ‡∏ô‡∏ï‡∏≥‡∏£‡∏±‡∏ö‡∏Ç‡∏≠‡∏á‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó‡∏¢‡∏≤" 
    },
    { 
      typeCode: "BIOSIMILAR", 
      typeName: "‡∏¢‡∏≤‡∏ä‡∏µ‡∏ß‡∏†‡∏≤‡∏û‡∏Ñ‡∏•‡πâ‡∏≤‡∏¢", 
      typeNameTh: "‡∏¢‡∏≤‡∏ä‡∏µ‡∏ß‡∏†‡∏≤‡∏û‡∏Ñ‡∏•‡πâ‡∏≤‡∏¢", 
      description: "‡∏¢‡∏≤‡∏ä‡∏µ‡∏ß‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà‡∏Ñ‡∏•‡πâ‡∏≤‡∏¢‡∏Å‡∏±‡∏ö‡∏¢‡∏≤‡∏ï‡πâ‡∏ô‡∏ï‡∏≥‡∏£‡∏±‡∏ö" 
    },
    { 
      typeCode: "CONTROLLED", 
      typeName: "‡∏¢‡∏≤‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°", 
      typeNameTh: "‡∏¢‡∏≤‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°", 
      description: "‡∏¢‡∏≤‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ",
      isControlled: true,
      requiresApproval: true,
      auditRequired: true
    },
    { 
      typeCode: "NARCOTIC", 
      typeName: "‡∏¢‡∏≤‡πÄ‡∏™‡∏û‡∏ï‡∏¥‡∏î", 
      typeNameTh: "‡∏¢‡∏≤‡πÄ‡∏™‡∏û‡∏ï‡∏¥‡∏î", 
      description: "‡∏¢‡∏≤‡πÄ‡∏™‡∏û‡∏ï‡∏¥‡∏î‡πÉ‡∏´‡πâ‡πÇ‡∏ó‡∏©",
      isNarcotic: true,
      isControlled: true,
      requiresWitness: true,
      requiresDoubleLock: true,
      auditRequired: true,
      reportingRequired: true
    },
    { 
      typeCode: "PSYCHOTROPIC", 
      typeName: "‡∏¢‡∏≤‡∏à‡∏¥‡∏ï‡πÄ‡∏ß‡∏ä", 
      typeNameTh: "‡∏¢‡∏≤‡∏à‡∏¥‡∏ï‡πÄ‡∏ß‡∏ä", 
      description: "‡∏¢‡∏≤‡∏à‡∏¥‡∏ï‡πÄ‡∏ß‡∏ä‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°",
      isPsychotropic: true,
      isControlled: true,
      requiresApproval: true
    },
    { 
      typeCode: "HIGH_ALERT", 
      typeName: "‡∏¢‡∏≤‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡∏™‡∏π‡∏á", 
      typeNameTh: "‡∏¢‡∏≤‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡∏™‡∏π‡∏á", 
      description: "‡∏¢‡∏≤‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡∏™‡∏π‡∏á‡∏ï‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢",
      isHighAlert: true,
      requiresWitness: true,
      auditRequired: true
    },
    { 
      typeCode: "REFRIGERATED", 
      typeName: "‡∏¢‡∏≤‡πÄ‡∏Å‡πá‡∏ö‡πÄ‡∏¢‡πá‡∏ô", 
      typeNameTh: "‡∏¢‡∏≤‡πÄ‡∏Å‡πá‡∏ö‡πÄ‡∏¢‡πá‡∏ô", 
      description: "‡∏¢‡∏≤‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏Å‡πá‡∏ö‡πÉ‡∏ô‡∏ï‡∏π‡πâ‡πÄ‡∏¢‡πá‡∏ô" 
    },
    { 
      typeCode: "CHEMOTHERAPY", 
      typeName: "‡∏¢‡∏≤‡πÄ‡∏Ñ‡∏°‡∏µ‡∏ö‡∏≥‡∏ö‡∏±‡∏î", 
      typeNameTh: "‡∏¢‡∏≤‡πÄ‡∏Ñ‡∏°‡∏µ‡∏ö‡∏≥‡∏ö‡∏±‡∏î", 
      description: "‡∏¢‡∏≤‡πÄ‡∏Ñ‡∏°‡∏µ‡∏ö‡∏≥‡∏ö‡∏±‡∏î‡∏°‡∏∞‡πÄ‡∏£‡πá‡∏á",
      isDangerous: true,
      requiresWitness: true,
      requiresApproval: true,
      auditRequired: true
    },
    { 
      typeCode: "HERBAL", 
      typeName: "‡∏¢‡∏≤‡∏™‡∏°‡∏∏‡∏ô‡πÑ‡∏û‡∏£", 
      typeNameTh: "‡∏¢‡∏≤‡∏™‡∏°‡∏∏‡∏ô‡πÑ‡∏û‡∏£", 
      description: "‡∏¢‡∏≤‡∏™‡∏°‡∏∏‡∏ô‡πÑ‡∏û‡∏£‡πÅ‡∏•‡∏∞‡∏ú‡∏•‡∏¥‡∏ï‡∏†‡∏±‡∏ì‡∏ë‡πå‡∏ò‡∏£‡∏£‡∏°‡∏ä‡∏≤‡∏ï‡∏¥" 
    }
  ];

  for (const hospital of hospitals) {
    for (const type of drugTypes) {
      await prisma.drugType.upsert({
        where: {
          hospitalId_typeCode: {
            hospitalId: hospital.id,
            typeCode: type.typeCode
          }
        },
        update: {},
        create: {
          ...type,
          hospitalId: hospital.id,
          isSystemDefault: true,
          createdBy: devUser.id
        }
      });
    }
  }
  masterData.drugTypes = drugTypes;
  console.log(`‚úÖ Created ${drugTypes.length} drug types for ${hospitals.length} hospitals`);

  // ================================
  // DRUG STORAGE CONDITIONS
  // ================================
  console.log("üå°Ô∏è Creating Drug Storage Conditions...");
  const drugStorages = [
    { 
      storageCode: "ROOM_TEMP", 
      storageName: "‡∏≠‡∏∏‡∏ì‡∏´‡∏†‡∏π‡∏°‡∏¥‡∏´‡πâ‡∏≠‡∏á", 
      storageNameTh: "‡∏≠‡∏∏‡∏ì‡∏´‡∏†‡∏π‡∏°‡∏¥‡∏´‡πâ‡∏≠‡∏á",
      temperatureMin: 15.0,
      temperatureMax: 30.0,
      humidityMin: 45.0,
      humidityMax: 75.0,
      // ‡∏•‡∏ö description ‡∏≠‡∏≠‡∏Å‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÉ‡∏ô schema
      storageInstructions: "‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡πÅ‡∏™‡∏á ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡πâ‡∏≠‡∏ô ‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡∏∑‡πâ‡∏ô - ‡πÄ‡∏Å‡πá‡∏ö‡∏ó‡∏µ‡πà‡∏≠‡∏∏‡∏ì‡∏´‡∏†‡∏π‡∏°‡∏¥‡∏´‡πâ‡∏≠‡∏á 15-30¬∞C ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡∏∑‡πâ‡∏ô 45-75%",
      protectFromLight: true,
      protectFromMoisture: true
    },
    { 
      storageCode: "REFRIGERATED", 
      storageName: "‡πÄ‡∏Å‡πá‡∏ö‡πÄ‡∏¢‡πá‡∏ô", 
      storageNameTh: "‡πÄ‡∏Å‡πá‡∏ö‡πÄ‡∏¢‡πá‡∏ô",
      temperatureMin: 2.0,
      temperatureMax: 8.0,
      humidityMin: 45.0,
      humidityMax: 75.0,
      storageInstructions: "‡∏´‡πâ‡∏≤‡∏°‡πÅ‡∏ä‡πà‡πÅ‡∏Ç‡πá‡∏á ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡πÅ‡∏™‡∏á - ‡πÄ‡∏Å‡πá‡∏ö‡πÉ‡∏ô‡∏ï‡∏π‡πâ‡πÄ‡∏¢‡πá‡∏ô 2-8¬∞C",
      requiresRefrigeration: true,
      protectFromLight: true
    },
    { 
      storageCode: "FROZEN", 
      storageName: "‡πÅ‡∏ä‡πà‡πÅ‡∏Ç‡πá‡∏á", 
      storageNameTh: "‡πÅ‡∏ä‡πà‡πÅ‡∏Ç‡πá‡∏á",
      temperatureMin: -25.0,
      temperatureMax: -15.0,
      storageInstructions: "‡πÅ‡∏ä‡πà‡πÅ‡∏Ç‡πá‡∏á‡∏ï‡∏•‡∏≠‡∏î‡πÄ‡∏ß‡∏•‡∏≤ ‡∏´‡πâ‡∏≤‡∏°‡πÉ‡∏´‡πâ‡∏•‡∏∞‡∏•‡∏≤‡∏¢ - ‡πÄ‡∏Å‡πá‡∏ö‡πÉ‡∏ô‡∏ï‡∏π‡πâ‡πÅ‡∏ä‡πà‡πÅ‡∏Ç‡πá‡∏á -25 ‡∏ñ‡∏∂‡∏á -15¬∞C",
      requiresFreezing: true
    },
    { 
      storageCode: "CONTROLLED_ROOM", 
      storageName: "‡∏´‡πâ‡∏≠‡∏á‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°", 
      storageNameTh: "‡∏´‡πâ‡∏≠‡∏á‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°",
      temperatureMin: 20.0,
      temperatureMax: 25.0,
      humidityMin: 45.0,
      humidityMax: 65.0,
      storageInstructions: "‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡∏≠‡∏∏‡∏ì‡∏´‡∏†‡∏π‡∏°‡∏¥‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡∏∑‡πâ‡∏ô‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏Ç‡πâ‡∏°‡∏á‡∏ß‡∏î - ‡∏´‡πâ‡∏≠‡∏á‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡∏≠‡∏∏‡∏ì‡∏´‡∏†‡∏π‡∏°‡∏¥ 20-25¬∞C ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡∏∑‡πâ‡∏ô 45-65%",
      monitoringRequired: true
    },
    { 
      storageCode: "DRY_PLACE", 
      storageName: "‡∏ó‡∏µ‡πà‡πÅ‡∏´‡πâ‡∏á", 
      storageNameTh: "‡∏ó‡∏µ‡πà‡πÅ‡∏´‡πâ‡∏á",
      temperatureMin: 15.0,
      temperatureMax: 30.0,
      humidityMax: 60.0,
      storageInstructions: "‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡∏∑‡πâ‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏û‡∏¥‡πÄ‡∏®‡∏© - ‡πÄ‡∏Å‡πá‡∏ö‡πÉ‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏´‡πâ‡∏á ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡∏∑‡πâ‡∏ô‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏¥‡∏ô 60%",
      protectFromMoisture: true
    },
    { 
      storageCode: "DARK_PLACE", 
      storageName: "‡∏ó‡∏µ‡πà‡∏°‡∏∑‡∏î", 
      storageNameTh: "‡∏ó‡∏µ‡πà‡∏°‡∏∑‡∏î",
      temperatureMin: 15.0,
      temperatureMax: 30.0,
      storageInstructions: "‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡πÅ‡∏™‡∏á‡πÅ‡∏î‡∏î‡πÅ‡∏•‡∏∞‡πÅ‡∏™‡∏á‡∏™‡∏ß‡πà‡∏≤‡∏á - ‡πÄ‡∏Å‡πá‡∏ö‡πÉ‡∏ô‡∏ó‡∏µ‡πà‡∏°‡∏∑‡∏î ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡πÅ‡∏™‡∏á",
      protectFromLight: true
    }
  ];

  for (const hospital of hospitals) {
    for (const storage of drugStorages) {
      await prisma.drugStorage.upsert({
        where: {
          hospitalId_storageCode: {
            hospitalId: hospital.id,
            storageCode: storage.storageCode
          }
        },
        update: {},
        create: {
          ...storage,
          hospitalId: hospital.id,
          isSystemDefault: true,
          createdBy: devUser.id
        }
      });
    }
  }
  masterData.drugStorages = drugStorages;
  console.log(`‚úÖ Created ${drugStorages.length} storage conditions for ${hospitals.length} hospitals`);

  console.log(`‚úÖ Successfully created all master data for ${hospitals.length} hospitals`);
  console.log(`üìä Master Data Summary:`);
  console.log(`  - Drug Forms: ${drugForms.length}`);
  console.log(`  - Drug Groups: ${drugGroups.length}`);
  console.log(`  - Drug Types: ${drugTypes.length}`);
  console.log(`  - Storage Conditions: ${drugStorages.length}`);

  return masterData;
}